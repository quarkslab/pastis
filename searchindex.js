Search.setIndex({"alltitles": {"AFL++": [[7, null]], "Adding a Fuzzer": [[0, null]], "Agent": [[1, null]], "Analysing Results": [[6, "analysing-results"]], "Broker": [[1, "broker"], [6, "broker"]], "Broker Addon": [[0, "broker-addon"]], "Client": [[1, "client"]], "Code Components": [[10, "code-components"]], "Configuration & Results": [[9, "configuration-results"]], "Credits": [[10, "credits"]], "Examples": [[0, "examples"]], "FSM Demo": [[12, null]], "Fuzzer Interface": [[2, null]], "Fuzzers": [[6, "fuzzers"]], "Fuzzing Engines": [[10, null]], "Getting Started": [[10, null]], "Honggfuzz": [[8, null]], "Installation": [[7, "installation"], [8, "installation"], [11, null]], "Linux": [[11, "linux"]], "Offline": [[9, "offline"]], "Offline mode": [[7, "offline-mode"], [8, "offline-mode"]], "Online": [[9, "online"]], "Online mode": [[7, "online-mode"], [8, "online-mode"]], "Other Platforms": [[11, "other-platforms"]], "PASTIS in action": [[10, "pastis-in-action"]], "Post campaign": [[12, "post-campaign"]], "Preparing the target": [[12, "preparing-the-target"]], "Prerequisites": [[0, "prerequisites"]], "Project Overview": [[10, null]], "Python API": [[10, null]], "Python Driver": [[0, "python-driver"]], "Running AFL++": [[12, "running-afl"]], "Running PASTIS": [[6, null]], "Running TritonDSE": [[12, "running-tritondse"]], "Running pastis-aflpp": [[7, "running-pastis-aflpp"]], "Running pastis-honggfuzz": [[8, "running-pastis-honggfuzz"]], "Running the Broker": [[12, "running-the-broker"]], "SAST": [[4, null]], "TritonDSE": [[9, null]], "Tutorials": [[10, null]], "Types": [[5, null]], "pastisd": [[6, "pastisd"]]}, "docnames": ["adding-fuzzer", "api/agent", "api/descr", "api/package", "api/sast", "api/types", "campaign", "engines/aflpp", "engines/honggfuzz", "engines/tritondse", "index", "installation", "tutorials/demo-fsm"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["adding-fuzzer.rst", "api/agent.rst", "api/descr.rst", "api/package.rst", "api/sast.rst", "api/types.rst", "campaign.rst", "engines/aflpp.rst", "engines/honggfuzz.rst", "engines/tritondse.rst", "index.rst", "installation.rst", "tutorials/demo-fsm.rst"], "indexentries": {"aarch64 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.AARCH64", false]], "accept_file() (libpastis.enginedesc.fuzzingenginedescriptor static method)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.accept_file", false]], "add_alert() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.add_alert", false]], "address (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.address", false]], "alert_one (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.ALERT_ONE", false]], "alert_only (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.ALERT_ONLY", false]], "alertdata (class in libpastis.types)": [[5, "libpastis.types.AlertData", false]], "all_alerts_validated() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.all_alerts_validated", false]], "android (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.ANDROID", false]], "any (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.ANY", false]], "arch (class in libpastis.types)": [[5, "libpastis.types.Arch", false]], "arch (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.arch", false]], "argv (libpastis.types.seedinjectloc attribute)": [[5, "libpastis.types.SeedInjectLoc.ARGV", false]], "armv7 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.ARMV7", false]], "auto (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.AUTO", false]], "auto (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.AUTO", false]], "auto (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.AUTO", false]], "auto() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.auto", false]], "auto_directory() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.auto_directory", false]], "binary_only (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.BINARY_ONLY", false]], "binarypackage (class in libpastis.package)": [[3, "libpastis.package.BinaryPackage", false]], "bind() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.bind", false]], "bind() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.bind", false]], "block (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.BLOCK", false]], "brokeragent (class in libpastis)": [[1, "libpastis.BrokerAgent", false]], "callgraph (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.callgraph", false]], "capitalize() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.capitalize", false]], "casefold() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.casefold", false]], "center() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.center", false]], "check_all (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.CHECK_ALL", false]], "checkmode (class in libpastis.types)": [[5, "libpastis.types.CheckMode", false]], "clientagent (class in libpastis)": [[1, "libpastis.ClientAgent", false]], "cmplog (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.cmplog", false]], "config_class (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.config_class", false]], "connect() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.connect", false]], "connect() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.connect", false]], "count() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.count", false]], "coveragemode (class in libpastis.types)": [[5, "libpastis.types.CoverageMode", false]], "covered (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.covered", false]], "crash (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.CRASH", false]], "critical (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.CRITICAL", false]], "critical() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.critical", false]], "debug (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.DEBUG", false]], "debug() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.debug", false]], "dictionary (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.dictionary", false]], "edge (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.EDGE", false]], "encode() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.encode", false]], "endswith() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.endswith", false]], "engineconfiguration (class in libpastis.enginedesc)": [[2, "libpastis.enginedesc.EngineConfiguration", false]], "error (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.ERROR", false]], "error() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.error", false]], "execmode (class in libpastis.types)": [[5, "libpastis.types.ExecMode", false]], "executable_path (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.executable_path", false]], "expandtabs() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.expandtabs", false]], "extension_blacklist (libpastis.package.binarypackage attribute)": [[3, "libpastis.package.BinaryPackage.EXTENSION_BLACKLIST", false]], "file (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.file", false]], "find() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.find", false]], "format() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.format", false]], "format_map() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.format_map", false]], "from_binary() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.from_binary", false]], "from_file() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.from_file", false]], "from_file() (libpastis.sast.sastreport static method)": [[4, "libpastis.sast.SASTReport.from_file", false]], "from_json() (libpastis.sast.sastalert static method)": [[4, "libpastis.sast.SASTAlert.from_json", false]], "from_json() (libpastis.sast.sastreport static method)": [[4, "libpastis.sast.SASTReport.from_json", false]], "from_json() (libpastis.types.alertdata static method)": [[5, "libpastis.types.AlertData.from_json", false]], "from_pb() (libpastis.types.fuzzingengineinfo static method)": [[5, "libpastis.types.FuzzingEngineInfo.from_pb", false]], "from_str() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.from_str", false]], "function (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.function", false]], "fuzzingenginedescriptor (class in libpastis.enginedesc)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor", false]], "fuzzingengineinfo (class in libpastis.types)": [[5, "libpastis.types.FuzzingEngineInfo", false]], "fuzzmode (class in libpastis.types)": [[5, "libpastis.types.FuzzMode", false]], "get_coverage_mode() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.get_coverage_mode", false]], "get_stats() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.get_stats", false]], "hang (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.HANG", false]], "idle (libpastis.types.state attribute)": [[5, "libpastis.types.State.IDLE", false]], "index() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.index", false]], "info (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.INFO", false]], "info() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.info", false]], "input (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.INPUT", false]], "instrumented (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.INSTRUMENTED", false]], "ios (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.IOS", false]], "is_cmplog() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_cmplog", false]], "is_dictionary() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_dictionary", false]], "is_quokka() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_quokka", false]], "is_standalone() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_standalone", false]], "isalnum() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isalnum", false]], "isalpha() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isalpha", false]], "isascii() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isascii", false]], "isdecimal() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isdecimal", false]], "isdigit() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isdigit", false]], "isidentifier() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isidentifier", false]], "islower() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.islower", false]], "isnumeric() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isnumeric", false]], "isprintable() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isprintable", false]], "isspace() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isspace", false]], "istitle() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.istitle", false]], "isupper() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isupper", false]], "iter_alerts() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.iter_alerts", false]], "join() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.join", false]], "libpastis.enginedesc": [[2, "module-libpastis.enginedesc", false]], "libpastis.package": [[3, "module-libpastis.package", false]], "libpastis.sast": [[4, "module-libpastis.sast", false]], "libpastis.types": [[5, "module-libpastis.types", false]], "line (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.line", false]], "linux (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.LINUX", false]], "ljust() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.ljust", false]], "loglevel (class in libpastis.types)": [[5, "libpastis.types.LogLevel", false]], "lower() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.lower", false]], "lstrip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.lstrip", false]], "macos (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.MACOS", false]], "make_package() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.make_package", false]], "maketrans() (libpastis.types.coveragemode static method)": [[5, "libpastis.types.CoverageMode.maketrans", false]], "module": [[2, "module-libpastis.enginedesc", false], [3, "module-libpastis.package", false], [4, "module-libpastis.sast", false], [5, "module-libpastis.types", false]], "msg_to_type() (libpastis.brokeragent static method)": [[1, "libpastis.BrokerAgent.msg_to_type", false]], "msg_to_type() (libpastis.clientagent static method)": [[1, "libpastis.ClientAgent.msg_to_type", false]], "name (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.NAME", false]], "name (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.name", false]], "new() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.new", false]], "params (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.params", false]], "partition() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.partition", false]], "path (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.PATH", false]], "persistent (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.PERSISTENT", false]], "platform (class in libpastis.types)": [[5, "libpastis.types.Platform", false]], "platform (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.platform", false]], "pymodule (libpastis.types.fuzzingengineinfo attribute)": [[5, "libpastis.types.FuzzingEngineInfo.pymodule", false]], "quokka (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.quokka", false]], "raw_line (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.raw_line", false]], "register_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_callback", false]], "register_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_callback", false]], "register_data_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_data_callback", false]], "register_data_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_data_callback", false]], "register_hello_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_hello_callback", false]], "register_log_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_log_callback", false]], "register_seed_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_seed_callback", false]], "register_seed_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_seed_callback", false]], "register_start_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_start_callback", false]], "register_stop_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_stop_callback", false]], "register_stop_coverage_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_stop_coverage_callback", false]], "register_telemetry_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_telemetry_callback", false]], "removeprefix() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.removeprefix", false]], "removesuffix() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.removesuffix", false]], "replace() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.replace", false]], "rfind() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rfind", false]], "rindex() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rindex", false]], "rjust() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rjust", false]], "rpartition() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rpartition", false]], "rsplit() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rsplit", false]], "rstrip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rstrip", false]], "run() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.run", false]], "run() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.run", false]], "running (libpastis.types.state attribute)": [[5, "libpastis.types.State.RUNNING", false]], "sastalert (class in libpastis.sast)": [[4, "libpastis.sast.SASTAlert", false]], "sastreport (class in libpastis.sast)": [[4, "libpastis.sast.SASTReport", false]], "seed (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.seed", false]], "seedinjectloc (class in libpastis.types)": [[5, "libpastis.types.SeedInjectLoc", false]], "seedtype (class in libpastis.types)": [[5, "libpastis.types.SeedType", false]], "send() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send", false]], "send() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send", false]], "send_alert_data() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_alert_data", false]], "send_hello() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_hello", false]], "send_log() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_log", false]], "send_seed() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_seed", false]], "send_seed() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_seed", false]], "send_start() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_start", false]], "send_stop() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_stop", false]], "send_stop_coverage_criteria() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_stop_coverage_criteria", false]], "send_telemetry() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_telemetry", false]], "send_to() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_to", false]], "send_to() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_to", false]], "set_target() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.set_target", false]], "severity (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.severity", false]], "short_name (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.SHORT_NAME", false]], "single_exec (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.SINGLE_EXEC", false]], "split() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.split", false]], "splitlines() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.splitlines", false]], "start() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.start", false]], "start() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.start", false]], "startswith() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.startswith", false]], "state (class in libpastis.types)": [[5, "libpastis.types.State", false]], "state (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.STATE", false]], "stdin (libpastis.types.seedinjectloc attribute)": [[5, "libpastis.types.SeedInjectLoc.STDIN", false]], "stop() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.stop", false]], "stop() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.stop", false]], "strip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.strip", false]], "supported_coverage_strategies() (libpastis.enginedesc.fuzzingenginedescriptor static method)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.supported_coverage_strategies", false]], "swapcase() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.swapcase", false]], "taxonomy (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.taxonomy", false]], "title() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.title", false]], "to_dict() (libpastis.sast.sastalert method)": [[4, "libpastis.sast.SASTAlert.to_dict", false]], "to_json() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.to_json", false]], "to_json() (libpastis.types.alertdata method)": [[5, "libpastis.types.AlertData.to_json", false]], "to_str() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.to_str", false]], "translate() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.translate", false]], "type (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.type", false]], "uncoverable (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.uncoverable", false]], "upper() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.upper", false]], "validated (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.validated", false]], "validated (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.validated", false]], "version (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.VERSION", false]], "version (libpastis.types.fuzzingengineinfo attribute)": [[5, "libpastis.types.FuzzingEngineInfo.version", false]], "warning (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.WARNING", false]], "warning() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.warning", false]], "windows (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.WINDOWS", false]], "write() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.write", false]], "write_csv() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.write_csv", false]], "x86 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.X86", false]], "x86_64 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.X86_64", false]], "zfill() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.zfill", false]]}, "objects": {"libpastis": [[1, 0, 1, "", "BrokerAgent"], [1, 0, 1, "", "ClientAgent"], [2, 2, 0, "-", "enginedesc"], [3, 2, 0, "-", "package"], [4, 2, 0, "-", "sast"], [5, 2, 0, "-", "types"]], "libpastis.BrokerAgent": [[1, 1, 1, "", "bind"], [1, 1, 1, "", "connect"], [1, 1, 1, "", "msg_to_type"], [1, 1, 1, "", "register_callback"], [1, 1, 1, "", "register_data_callback"], [1, 1, 1, "", "register_hello_callback"], [1, 1, 1, "", "register_log_callback"], [1, 1, 1, "", "register_seed_callback"], [1, 1, 1, "", "register_stop_coverage_callback"], [1, 1, 1, "", "register_telemetry_callback"], [1, 1, 1, "", "run"], [1, 1, 1, "", "send"], [1, 1, 1, "", "send_seed"], [1, 1, 1, "", "send_start"], [1, 1, 1, "", "send_stop"], [1, 1, 1, "", "send_to"], [1, 1, 1, "", "start"], [1, 1, 1, "", "stop"]], "libpastis.ClientAgent": [[1, 1, 1, "", "bind"], [1, 1, 1, "", "connect"], [1, 1, 1, "", "critical"], [1, 1, 1, "", "debug"], [1, 1, 1, "", "error"], [1, 1, 1, "", "info"], [1, 1, 1, "", "msg_to_type"], [1, 1, 1, "", "register_callback"], [1, 1, 1, "", "register_data_callback"], [1, 1, 1, "", "register_seed_callback"], [1, 1, 1, "", "register_start_callback"], [1, 1, 1, "", "register_stop_callback"], [1, 1, 1, "", "run"], [1, 1, 1, "", "send"], [1, 1, 1, "", "send_alert_data"], [1, 1, 1, "", "send_hello"], [1, 1, 1, "", "send_log"], [1, 1, 1, "", "send_seed"], [1, 1, 1, "", "send_stop_coverage_criteria"], [1, 1, 1, "", "send_telemetry"], [1, 1, 1, "", "send_to"], [1, 1, 1, "", "start"], [1, 1, 1, "", "stop"], [1, 1, 1, "", "warning"]], "libpastis.enginedesc": [[2, 0, 1, "", "EngineConfiguration"], [2, 0, 1, "", "FuzzingEngineDescriptor"]], "libpastis.enginedesc.EngineConfiguration": [[2, 1, 1, "", "from_file"], [2, 1, 1, "", "from_str"], [2, 1, 1, "", "get_coverage_mode"], [2, 1, 1, "", "new"], [2, 1, 1, "", "set_target"], [2, 1, 1, "", "to_str"]], "libpastis.enginedesc.FuzzingEngineDescriptor": [[2, 3, 1, "", "NAME"], [2, 3, 1, "", "SHORT_NAME"], [2, 3, 1, "", "VERSION"], [2, 1, 1, "", "accept_file"], [2, 3, 1, "", "config_class"], [2, 1, 1, "", "supported_coverage_strategies"]], "libpastis.package": [[3, 0, 1, "", "BinaryPackage"]], "libpastis.package.BinaryPackage": [[3, 3, 1, "", "EXTENSION_BLACKLIST"], [3, 4, 1, "", "arch"], [3, 1, 1, "", "auto"], [3, 1, 1, "", "auto_directory"], [3, 4, 1, "", "callgraph"], [3, 4, 1, "", "cmplog"], [3, 4, 1, "", "dictionary"], [3, 4, 1, "", "executable_path"], [3, 1, 1, "", "from_binary"], [3, 1, 1, "", "is_cmplog"], [3, 1, 1, "", "is_dictionary"], [3, 1, 1, "", "is_quokka"], [3, 1, 1, "", "is_standalone"], [3, 1, 1, "", "make_package"], [3, 4, 1, "", "name"], [3, 4, 1, "", "platform"], [3, 4, 1, "", "quokka"]], "libpastis.sast": [[4, 0, 1, "", "SASTAlert"], [4, 0, 1, "", "SASTReport"]], "libpastis.sast.SASTAlert": [[4, 3, 1, "", "file"], [4, 1, 1, "", "from_json"], [4, 3, 1, "", "function"], [4, 3, 1, "", "line"], [4, 3, 1, "", "params"], [4, 3, 1, "", "raw_line"], [4, 3, 1, "", "severity"], [4, 3, 1, "", "taxonomy"], [4, 1, 1, "", "to_dict"], [4, 3, 1, "", "type"], [4, 3, 1, "", "uncoverable"], [4, 3, 1, "", "validated"]], "libpastis.sast.SASTReport": [[4, 1, 1, "", "add_alert"], [4, 1, 1, "", "all_alerts_validated"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_stats"], [4, 1, 1, "", "iter_alerts"], [4, 1, 1, "", "to_json"], [4, 1, 1, "", "write"], [4, 1, 1, "", "write_csv"]], "libpastis.types": [[5, 0, 1, "", "AlertData"], [5, 0, 1, "", "Arch"], [5, 0, 1, "", "CheckMode"], [5, 0, 1, "", "CoverageMode"], [5, 0, 1, "", "ExecMode"], [5, 0, 1, "", "FuzzMode"], [5, 0, 1, "", "FuzzingEngineInfo"], [5, 0, 1, "", "LogLevel"], [5, 0, 1, "", "Platform"], [5, 0, 1, "", "SeedInjectLoc"], [5, 0, 1, "", "SeedType"], [5, 0, 1, "", "State"]], "libpastis.types.AlertData": [[5, 3, 1, "", "address"], [5, 3, 1, "", "covered"], [5, 1, 1, "", "from_json"], [5, 3, 1, "", "seed"], [5, 1, 1, "", "to_json"], [5, 3, 1, "", "validated"]], "libpastis.types.Arch": [[5, 3, 1, "", "AARCH64"], [5, 3, 1, "", "ARMV7"], [5, 3, 1, "", "X86"], [5, 3, 1, "", "X86_64"]], "libpastis.types.CheckMode": [[5, 3, 1, "", "ALERT_ONE"], [5, 3, 1, "", "ALERT_ONLY"], [5, 3, 1, "", "CHECK_ALL"]], "libpastis.types.CoverageMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "BLOCK"], [5, 3, 1, "", "EDGE"], [5, 3, 1, "", "PATH"], [5, 3, 1, "", "STATE"], [5, 1, 1, "", "capitalize"], [5, 1, 1, "", "casefold"], [5, 1, 1, "", "center"], [5, 1, 1, "", "count"], [5, 1, 1, "", "encode"], [5, 1, 1, "", "endswith"], [5, 1, 1, "", "expandtabs"], [5, 1, 1, "", "find"], [5, 1, 1, "", "format"], [5, 1, 1, "", "format_map"], [5, 1, 1, "", "index"], [5, 1, 1, "", "isalnum"], [5, 1, 1, "", "isalpha"], [5, 1, 1, "", "isascii"], [5, 1, 1, "", "isdecimal"], [5, 1, 1, "", "isdigit"], [5, 1, 1, "", "isidentifier"], [5, 1, 1, "", "islower"], [5, 1, 1, "", "isnumeric"], [5, 1, 1, "", "isprintable"], [5, 1, 1, "", "isspace"], [5, 1, 1, "", "istitle"], [5, 1, 1, "", "isupper"], [5, 1, 1, "", "join"], [5, 1, 1, "", "ljust"], [5, 1, 1, "", "lower"], [5, 1, 1, "", "lstrip"], [5, 1, 1, "", "maketrans"], [5, 1, 1, "", "partition"], [5, 1, 1, "", "removeprefix"], [5, 1, 1, "", "removesuffix"], [5, 1, 1, "", "replace"], [5, 1, 1, "", "rfind"], [5, 1, 1, "", "rindex"], [5, 1, 1, "", "rjust"], [5, 1, 1, "", "rpartition"], [5, 1, 1, "", "rsplit"], [5, 1, 1, "", "rstrip"], [5, 1, 1, "", "split"], [5, 1, 1, "", "splitlines"], [5, 1, 1, "", "startswith"], [5, 1, 1, "", "strip"], [5, 1, 1, "", "swapcase"], [5, 1, 1, "", "title"], [5, 1, 1, "", "translate"], [5, 1, 1, "", "upper"], [5, 1, 1, "", "zfill"]], "libpastis.types.ExecMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "PERSISTENT"], [5, 3, 1, "", "SINGLE_EXEC"]], "libpastis.types.FuzzMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "BINARY_ONLY"], [5, 3, 1, "", "INSTRUMENTED"]], "libpastis.types.FuzzingEngineInfo": [[5, 1, 1, "", "from_pb"], [5, 3, 1, "", "pymodule"], [5, 3, 1, "", "version"]], "libpastis.types.LogLevel": [[5, 3, 1, "", "CRITICAL"], [5, 3, 1, "", "DEBUG"], [5, 3, 1, "", "ERROR"], [5, 3, 1, "", "INFO"], [5, 3, 1, "", "WARNING"]], "libpastis.types.Platform": [[5, 3, 1, "", "ANDROID"], [5, 3, 1, "", "ANY"], [5, 3, 1, "", "IOS"], [5, 3, 1, "", "LINUX"], [5, 3, 1, "", "MACOS"], [5, 3, 1, "", "WINDOWS"]], "libpastis.types.SeedInjectLoc": [[5, 3, 1, "", "ARGV"], [5, 3, 1, "", "STDIN"]], "libpastis.types.SeedType": [[5, 3, 1, "", "CRASH"], [5, 3, 1, "", "HANG"], [5, 3, 1, "", "INPUT"]], "libpastis.types.State": [[5, 3, 1, "", "IDLE"], [5, 3, 1, "", "RUNNING"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "terms": {"": [0, 1, 2, 5, 6, 7, 8, 9, 12], "0": [2, 5, 9], "0000": 5, "007f": 5, "1": [2, 5, 9], "10": 5, "11": 1, "16": 12, "2": [1, 5], "20": 5, "3": [5, 10], "32": 12, "4": 5, "5": 5, "5555": [0, 1, 6, 7, 8, 9, 12], "5a504b49": 8, "8": [0, 1, 5, 9], "A": [0, 1, 2, 5], "As": [0, 2, 9], "At": [1, 6, 7, 8], "By": 12, "For": [0, 2, 6, 9], "If": [0, 2, 3, 5, 6, 9, 12], "In": [0, 5, 6, 7, 8], "It": [0, 5, 6, 7, 8, 9, 10, 12], "Its": [4, 10], "One": [7, 8, 12], "That": [0, 6, 9, 10], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "Then": [5, 10], "There": [0, 7, 8], "These": 1, "To": [0, 12], "With": 5, "__getitem__": 5, "__main__": [0, 1], "__name__": [0, 1], "aarch64": 5, "ab": 5, "abl": [1, 12], "about": [0, 4, 9], "absorb": 10, "abstract": [2, 4], "accept": 2, "accept_fil": [0, 2], "accord": 1, "act": [0, 10], "ad": [3, 10], "add": 4, "add_alert": 4, "addit": [1, 3, 4, 9], "addon": [6, 10, 12], "address": [1, 2, 5, 9], "advert": 0, "advertis": 1, "ae": 2, "afl": [2, 6, 10, 11], "aflplusplu": 7, "aflpp": [6, 10, 12], "aflpp_path": 7, "after": [5, 6], "agent": [0, 3, 5, 10], "aggreg": 6, "aim": 10, "alert": [0, 1, 4, 5, 6, 9, 10], "alert_data": 1, "alert_on": [5, 6, 9], "alert_onli": [5, 6, 7, 8, 9], "alertdata": [1, 5], "alerts_data": 6, "alia": 2, "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "all_alerts_valid": 4, "allow": [0, 6, 7, 8], "along": 3, "alpha": 5, "alphabet": 5, "alreadi": 0, "also": [0, 3, 5, 6, 9, 10], "alwai": 1, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "analys": 10, "analyst": 10, "android": 5, "ani": [0, 5, 6, 9, 12], "announc": 6, "anoth": 6, "api": 0, "appli": [0, 9], "applic": [1, 3], "approach": 12, "appropri": [0, 6, 11], "apt": 8, "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "arch": [1, 3, 5], "architectur": [0, 1, 3, 5, 6], "archiv": [3, 9], "arg": 5, "argument": [1, 5, 6, 7, 8], "argumnet": 1, "argv": [0, 1, 5, 6, 7, 8, 9], "armv7": 5, "around": 10, "articul": 10, "ascii": 5, "associ": 0, "assum": 5, "attach": 9, "attribut": [2, 4], "auto": [2, 3, 5, 9], "auto_directori": 3, "automat": [0, 5, 6, 7, 8, 9, 10], "avail": 6, "b": [6, 12], "back": 10, "balanc": 6, "base": [1, 5], "basi": 0, "basic": [0, 2], "been": [0, 1, 4, 5, 6, 11], "befor": [5, 6, 7], "beforehand": 8, "begin": 5, "behavior": 6, "between": [0, 5, 6, 10], "bin": [6, 12], "binari": [0, 1, 3, 6, 7, 8, 9, 10], "binary_fil": 2, "binary_onli": [5, 9], "binarypackag": [1, 3], "bind": [1, 6], "binutil": 8, "bit": 12, "blob": 3, "block": [1, 5, 6, 9], "bof": 4, "bool": [1, 2, 3, 4, 5], "boundari": 5, "brace": 5, "break": 5, "broke": 6, "broker": [2, 3, 5, 7, 8, 9, 10], "brokerag": [1, 10], "bug": [5, 10, 12], "build_qemu_support": 7, "byte": [0, 1, 3, 4, 5], "c": [6, 9, 12], "call": [0, 1, 2, 5, 10], "callabl": 1, "callback": [0, 1, 9], "callgraph": 3, "campagn": [0, 1], "campaign": [0, 6, 10], "campain": [0, 6, 10], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "capabl": 6, "capit": 5, "case": [5, 6, 9, 10, 12], "casefold": 5, "caseless": 5, "cb": 1, "cc": 12, "cd": [7, 8, 12], "center": 5, "cflag": 12, "chang": 9, "char": 5, "charact": 5, "charg": 10, "check": [0, 1, 3, 4, 6, 7, 8, 9], "check_al": [5, 6, 7, 8, 9], "checker": 4, "checkmod": [0, 1, 5, 9], "chk": [7, 8, 9], "chkmode": [0, 1, 6, 7, 8, 9], "ckmode": 1, "clang": 12, "class": [0, 1, 2, 3, 4, 5, 10], "client": [0, 2, 6, 10, 12], "clientag": [0, 1, 10], "clone": 7, "cmplog": 3, "code": [0, 4, 5, 12], "codebas": 10, "codec": 5, "collabor": [10, 12], "com": 7, "combin": [9, 10, 12], "command": [1, 3, 6, 7, 8, 9], "commenc": [0, 1], "common": 10, "commun": 10, "compar": 5, "comparison": 5, "compil": [6, 7, 8, 12], "complet": 9, "compliant": 0, "complog": 3, "compos": 12, "concaten": 5, "conf": 12, "config": [6, 9, 12], "config_class": 2, "configur": [0, 1, 2, 5, 6, 10, 12], "connect": [0, 1, 6, 10, 12], "consid": [0, 5, 6], "constraint": 0, "consumpt": 6, "contact": 12, "contain": [0, 3, 5, 6, 9, 12], "content": [1, 3], "context": [5, 10], "convent": 4, "convers": 0, "convert": [3, 5], "copi": [5, 6], "corpu": [6, 9, 10, 12], "could": [0, 1], "count": [1, 5, 9], "counterpart": 9, "cov": 9, "cover": [0, 1, 4, 5, 6], "coverag": [0, 1, 2, 4, 5, 6, 9, 10], "coverage_block": 1, "coverage_edg": 1, "coverage_path": 1, "coveragemod": [0, 1, 2, 5], "covmod": [0, 1, 9], "cpu": 0, "crash": [0, 1, 5, 6], "creat": [3, 4, 6], "criteria": [1, 6], "critic": [1, 4, 5], "csv": [4, 6], "current": [0, 1, 4], "cve": 4, "cwe": 4, "cycl": 1, "daemon": 6, "data": [0, 1, 4, 5, 6, 12], "databas": 3, "datamsg": 1, "debug": [1, 5, 9], "decid": 6, "decim": 5, "def": [0, 1, 5], "default": [0, 1, 5, 9, 12], "defin": [0, 2, 6], "delet": 5, "delimit": 5, "demo": 10, "depdend": 5, "depend": [6, 11, 12], "describ": [0, 2, 6], "descriptor": [1, 5], "design": [0, 10], "detail": 9, "detect": [2, 6, 12], "dev": 8, "develop": 2, "dict": 4, "dictionari": [3, 4, 5], "dictionnari": [3, 4], "differ": [2, 3, 6, 9], "digit": 5, "direct": 6, "directli": [0, 3], "directori": [2, 3, 6, 7, 8, 9, 12], "discard": 5, "discover": [7, 8], "discoveri": [5, 6], "distrib": 7, "dn": 1, "do": [0, 5, 6], "document": [0, 9], "doe": [0, 6, 7, 8], "done": [5, 12], "driven": [4, 6, 9, 10], "driver": [8, 10], "e": [1, 4, 6, 12], "each": [5, 6, 10, 12], "echo": [7, 8, 12], "edg": [1, 5, 6, 9], "effort": 6, "either": [0, 5, 7, 8], "elf": 6, "empti": 5, "enabl": [6, 9, 10], "encapsul": 0, "encod": 5, "end": 5, "endswith": 5, "engin": [0, 1, 2, 5, 6, 8, 11, 12], "engine_arg": [0, 1], "engineconfigur": 2, "enginedesc": 2, "ensembl": 10, "ensur": [3, 10], "enum": 5, "environ": [7, 8], "equal": 5, "equilibr": 6, "error": [1, 4, 5], "essenti": 6, "etc": [0, 2, 3, 6], "event": 9, "exampl": [1, 5, 10], "exe_fil": 3, "exec": 0, "exec_per_sec": 1, "execmod": [0, 1, 2, 5], "exectu": 3, "execut": [0, 1, 2, 3, 5, 6, 7, 8, 9], "executable_path": 3, "exist": [0, 6], "exit": [6, 7, 8], "exmod": [0, 1, 7, 8, 9], "expand": 5, "expandtab": 5, "explicit": 6, "explor": [6, 7, 8, 9], "export": [4, 6, 7, 8], "expos": 10, "express": 5, "extension_blacklist": 3, "extern": 9, "extra": 6, "extract": 3, "extract_dir": 3, "f": [0, 1, 5], "failur": 5, "fals": 5, "favor": 6, "featur": 0, "field": 5, "figur": 0, "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12], "filenotfounderror": 3, "filepath": [1, 2, 3], "fill": 5, "fillchar": 5, "final": 6, "find": [0, 3, 5, 7, 8], "first": [0, 5], "fmod": 9, "fname": [0, 1], "fno": 12, "focu": 5, "folder": [0, 6], "follow": [0, 1, 5, 6, 9], "form": 10, "format": 5, "format_map": 5, "forward": [0, 2, 6], "found": [5, 7], "framework": [10, 11, 12], "fresh": 2, "from": [0, 1, 2, 3, 4, 5, 6, 10, 12], "from_binari": 3, "from_fil": [2, 4], "from_json": [4, 5], "from_pb": 5, "from_str": 2, "front": 5, "fsm": 10, "full": [1, 6], "fulli": 1, "function": [1, 2, 3, 4, 9], "further": [7, 8], "fuzz": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12], "fuzzer": [1, 5, 7, 8, 10, 11], "fuzzingengin": [0, 1], "fuzzingenginedescriptor": [0, 2], "fuzzingengineinfo": [0, 1, 5], "fuzzmod": [1, 2, 5, 9], "g": [1, 4, 12], "gener": 0, "get": [1, 4], "get_coverage_mod": 2, "get_stat": 4, "git": 7, "github": 7, "give": [6, 7, 8, 9], "given": [1, 3, 4, 5, 6], "global": 6, "greybox": 2, "gt": 3, "gz": 12, "h": [7, 8, 9], "ha": [0, 1, 4, 5, 7, 8, 11, 12], "handl": [5, 9], "handshak": 0, "hang": [1, 5, 6], "har": 6, "have": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12], "head": 10, "hello": [0, 1], "hellomsg": [0, 1], "help": [6, 7, 8, 9], "helper": 1, "hex": [0, 1], "hf": [6, 8, 12], "hfuzz": 12, "hfuzz_path": 8, "highest": 5, "highlight": 10, "honggfuzz": [0, 2, 6, 10, 11, 12], "host": [7, 8], "how": [0, 5, 12], "howev": 10, "http": 7, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "id": [1, 4, 5, 12], "identifi": [2, 5], "idl": 5, "ignor": 5, "impact": 4, "implement": [0, 2, 5, 12], "import": [0, 1], "includ": 5, "incom": 1, "inde": [3, 6], "independ": [0, 9], "index": [2, 5], "indic": [0, 1, 2, 3, 5, 6], "info": [0, 1, 5], "inform": [0, 1, 6, 9], "infrastructur": 10, "inherit": 0, "initi": [0, 4, 6, 7, 8, 9, 10, 12], "inject": [5, 6, 7, 8, 9], "injloc": 6, "input": [0, 1, 5, 6, 7, 8, 9], "inputseedmsg": 1, "insert": 5, "insid": 6, "instal": [0, 10], "instanc": [4, 5, 6, 9], "instanci": 0, "instead": 5, "instrument": [3, 5, 6, 9, 12], "int": [1, 2, 4, 5], "integ": [5, 6, 9, 12], "integr": 0, "intent": [7, 8], "intention": 5, "interact": [0, 1, 7, 8, 9], "interfac": [0, 1, 10], "intermedi": 10, "interpret": 5, "interrupt": 6, "intrins": 9, "io": 5, "ip": [1, 6, 9, 12], "is_cmplog": 3, "is_dictionari": 3, "is_quokka": 3, "is_standalon": 3, "isalnum": 5, "isalpha": 5, "isascii": 5, "isdecim": 5, "isdigit": 5, "isidentifi": 5, "iskeyword": 5, "islow": 5, "isnumer": 5, "isprint": 5, "isspac": 5, "istitl": 5, "isupp": 5, "iter": [0, 4, 5, 9], "iter_alert": 4, "its": [0, 2, 3, 5, 9, 12], "itself": [5, 7, 8], "join": 5, "json": [4, 5, 6, 12], "justifi": 5, "keepend": 5, "kei": 5, "keyword": 5, "kill": 6, "kl_report": [0, 1], "know": [0, 2], "kwarg": 5, "la": [0, 1], "lan": 6, "last": 1, "last_cov_upd": 1, "launch": [1, 6, 7, 8, 9, 12], "lead": [4, 5], "least": 5, "left": 5, "len": 5, "length": 5, "level": [1, 5], "libpasti": [0, 1, 2, 3, 4, 5, 10], "librari": [3, 7, 8, 10], "libunwind": 8, "like": [0, 2], "limit": [5, 6, 9], "line": [1, 4, 5, 6, 7, 8, 9], "linux": [5, 6, 10], "list": [0, 1, 2, 3, 4, 5], "listen": [1, 6], "ljust": 5, "load": [0, 2, 5, 6, 9, 12], "local": [1, 7, 8, 9], "localhost": [0, 1, 6, 7, 8, 9, 12], "locat": [1, 5, 6, 7, 8, 9], "log": [0, 1, 5, 6, 7, 8, 9], "logfil": [1, 7, 8], "loglevel": [0, 1, 5], "logmsg": 1, "look": 3, "lookup": 5, "lookuperror": 5, "loop": [1, 6], "lower": 5, "lowercas": 5, "lowest": 5, "lstrip": 5, "m": 6, "machin": [9, 12], "maco": 5, "mai": 5, "main": [0, 3, 7, 8, 10], "main_binari": 3, "mainli": 5, "maintain": 6, "make": [5, 7, 8, 12], "make_hf": 8, "make_packag": 3, "makefil": 12, "maketran": 5, "manag": 4, "mandatori": [6, 7, 8], "mani": 9, "manner": [1, 9], "map": 5, "materi": 0, "matter": 0, "maxim": [6, 10], "maximum": 5, "maxsplit": 5, "mean": 5, "meant": [1, 4, 6], "mecan": 0, "mechan": 9, "mem": 6, "memori": [0, 6], "messag": [0, 1, 3, 5, 6, 7, 8, 9], "messagetyp": 1, "metadata": 5, "method": [0, 1, 2, 5], "metric": [1, 2, 5], "mime": 3, "misra": 4, "mode": [1, 2, 5, 6, 9, 10], "modifi": 0, "modul": [0, 5, 6, 7, 8, 9], "moment": [1, 6, 7, 8, 9], "more": [5, 6, 9], "mostli": 10, "msg": 1, "msg_to_typ": 1, "msg_type": 1, "multipl": [0, 1, 5, 7, 8, 9], "must": [5, 6, 9], "n": [5, 9], "name": [0, 1, 2, 3, 5, 6, 9], "natur": 5, "necessarili": 1, "need": [0, 6], "network": [6, 9, 10], "networkag": 1, "never": 5, "new": [0, 2, 5, 10], "no_arg": 5, "no_transmit": 6, "non": 5, "none": [0, 1, 2, 3, 4, 5], "nonetheless": 0, "normal": [5, 6, 7, 8, 9], "notabl": 0, "notat": 5, "note": [5, 12], "noth": 0, "now": 12, "number": [0, 1, 4, 5, 9], "numer": 5, "o": 12, "object": [0, 1, 2, 3, 4, 5], "obtain": 0, "occurr": 5, "offlin": 10, "old": 5, "onc": [0, 12], "one": [0, 1, 2, 5, 6, 7, 8, 9], "ones": [5, 10], "onli": [1, 2, 3, 5, 6, 7, 8, 9], "onlin": [6, 10, 12], "oper": 5, "option": [2, 5, 6, 7, 8, 9, 10], "order": [0, 6, 12], "ordin": 5, "organ": 9, "origin": 5, "other": [0, 5, 6, 7, 8, 10], "otherwis": [5, 6, 7, 8], "our": 12, "out_fil": 4, "output": [4, 12], "overlap": 5, "own": [0, 9], "p": [6, 7, 8, 9], "pack": 3, "packag": [1, 3, 10, 11], "packet": 12, "pad": 5, "param": 4, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "pargv": [6, 7, 8, 9], "pars": [2, 4, 5], "parser": 4, "part": [3, 5, 7, 8], "partial": 6, "partit": 5, "pass": [0, 1], "pasti": [0, 1, 3, 9, 11, 12], "pastisd": 1, "pastisds": 0, "pastisttbrok": 12, "patch": 8, "path": [1, 2, 3, 4, 5, 6, 7, 8, 9], "pb": 5, "peer": 6, "per": [0, 1, 6], "percent": 6, "perform": [0, 4, 6, 9, 10], "period": 0, "permiss": 3, "persist": [5, 7, 8, 9], "pie": 12, "pip": 11, "plain": 5, "platform": [0, 1, 3, 5, 6, 10], "pleas": 6, "plot": 1, "point": 5, "port": [1, 6, 7, 8, 9, 12], "posit": [4, 5], "possibl": [5, 6], "post": 10, "pp": 9, "pq": 5, "practic": 9, "pre": 0, "predic": 9, "prefer": 0, "prefix": 5, "prefixed_edg": 9, "preload": 12, "prepar": 10, "prerequisit": 10, "present": 5, "print": 1, "printabl": 5, "probe": 9, "probeinterfac": 9, "process": [0, 5], "produc": [0, 10], "profil": [7, 8], "program": [0, 1, 3, 6, 7, 8, 9], "project": 9, "propag": 10, "properti": 3, "protobuf": [1, 5], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12], "punctuat": 5, "pure": 10, "purpos": 0, "put": 9, "pwd": [7, 8], "py": 0, "pymodul": 5, "pypi": 11, "python": [5, 6, 7, 9, 11], "qemu": 7, "qemu_mod": 7, "qualnam": 5, "quokka": 3, "r": [5, 6, 7, 8, 9], "rais": [3, 5], "ram": 6, "rang": 5, "rather": [0, 12], "raw": 1, "raw_lin": 4, "reach": [5, 6, 7, 8, 9], "react": 0, "read": [0, 12], "readi": [0, 12], "receiv": [0, 1, 3, 6, 7, 8, 9, 10], "recept": [0, 1], "recogn": 3, "recommand": 0, "refer": 9, "regist": [1, 5, 9], "register_callback": 1, "register_data_callback": 1, "register_error": 5, "register_hello_callback": 1, "register_log_callback": 1, "register_seed_callback": [0, 1], "register_start_callback": [0, 1], "register_stop_callback": [0, 1], "register_stop_coverage_callback": 1, "register_telemetry_callback": 1, "regular": 5, "relat": [0, 1, 6], "relev": 0, "remain": 5, "remot": [1, 12], "remov": 5, "removeprefix": 5, "removesuffix": 5, "replac": 5, "report": [1, 4, 6, 7, 8, 9], "repr": 5, "repres": [2, 3, 4, 5], "represent": 5, "requir": [0, 3, 6, 7, 8, 9, 11], "research": 10, "reserv": 5, "respect": [7, 8, 10], "rest": 5, "restart": 6, "result": [4, 5, 10], "retriev": 12, "return": [1, 2, 3, 4, 5, 6], "reus": 6, "review": 4, "rfind": 5, "right": [5, 6, 12], "rindex": 5, "rjust": 5, "rpartit": 5, "rsplit": 5, "rstrip": 5, "run": [0, 1, 2, 5, 9, 10], "runtim": [0, 6], "same": [3, 5, 6, 9, 10], "sast": [1, 5, 6, 7, 8, 9, 10], "sast_report": 1, "sastalert": 4, "sastreport": [4, 6], "satisfi": 0, "save": 3, "scheme": 5, "search": 5, "sec": 0, "second": 1, "secur": 6, "see": [0, 11], "seed": [0, 1, 5, 6, 7, 8, 9, 10], "seed_inj": [0, 1], "seed_loc": 1, "seed_receiv": [0, 1], "seedinj": [7, 8, 9], "seedinjectloc": [0, 1, 5], "seedtyp": [0, 1, 5], "seem": 0, "select": [2, 5], "send": [0, 1, 3, 5, 10, 12], "send_alert_data": 1, "send_hello": [0, 1], "send_log": 1, "send_se": 1, "send_start": 1, "send_stop": 1, "send_stop_coverage_criteria": 1, "send_telemetri": 1, "send_to": 1, "sent": [0, 1, 5, 6], "sep": 5, "separ": [0, 5], "serial": [2, 4, 5], "server": [1, 7, 8, 9], "set": [2, 5, 10], "set_target": 2, "sever": 4, "sh": [7, 8], "share": [3, 6, 10], "short": 2, "short_nam": 2, "should": [0, 1, 2, 3, 5, 6, 9, 12], "show": [0, 6, 7, 8, 9, 12], "shown": 0, "side": [0, 1, 2], "similarli": 6, "simpl": [0, 1, 7, 8, 12], "simplifi": 6, "singl": [2, 5, 6], "single_exec": [5, 7, 8, 9], "size": 5, "slice": 5, "snippet": 0, "so": [1, 2], "socket": 1, "softwar": [10, 12], "sole": [4, 6], "some": [0, 5], "somewhat": 4, "soon": 0, "sourc": [1, 2, 3, 4, 5], "space": 5, "specif": [0, 1, 2, 5, 6, 8, 12], "specifi": [5, 6, 7, 8], "split": 5, "splitlin": 5, "sponsor": 10, "src": 12, "standalon": 0, "standard": 10, "start": [0, 1, 3, 5, 6, 9], "start_receiv": [0, 1], "startmsg": 1, "startswith": 5, "stat": 4, "state": [0, 1, 4, 5, 12], "static": [1, 2, 3, 4, 5], "statist": 1, "stdin": [1, 5, 6, 7, 8, 9, 12], "stop": [0, 1, 5, 6], "stop_receiv": [0, 1], "stopcoveragecriteria": 1, "stopmsg": 1, "store": 6, "str": [0, 1, 2, 3, 4, 5], "straighforward": 12, "strategi": 9, "strict": 5, "string": [1, 2, 3, 4, 5], "strip": 5, "struct": 12, "structur": 6, "sub": 5, "subclass": [0, 1], "subsequ": 9, "substitut": 5, "substr": 5, "sudo": 8, "suffix": 5, "suitabl": [0, 5], "summar": 0, "support": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12], "supported_coverage_strategi": 2, "swapcas": 5, "switch": 12, "synthet": 6, "t": [5, 6, 9], "tab": 5, "tabl": 5, "tabsiz": 5, "tailor": 8, "take": [1, 3], "taken": [4, 6], "tar": 12, "target": [2, 3, 5, 6, 9, 10], "taxonomi": 4, "techniqu": 10, "telemetri": [0, 1, 6], "telemetrymsg": 1, "term": 3, "termin": 12, "test": [0, 3, 4, 5, 9, 10, 11], "test_client": 0, "text": [5, 6, 7, 8, 9], "than": 0, "thei": [0, 5, 6, 10], "theirs": 6, "them": [2, 7, 8, 9], "theoret": 10, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 10], "third": 5, "thread": [0, 1], "three": [5, 6], "threshold": 6, "through": [5, 7, 8, 9], "thu": [0, 1, 4, 5, 6, 7, 8, 9], "time": [6, 12], "timeout": [1, 6], "tini": [0, 12], "titl": 5, "titlecas": 5, "tmp": 3, "to_dict": 4, "to_json": [4, 5], "to_str": 2, "togeth": 10, "too": 5, "tool": 4, "total": [1, 4], "total_exec": 1, "totoal": 4, "toward": 6, "trace": 9, "trail": 5, "translat": [5, 9], "transmit": 6, "tricki": [7, 8], "trigger": 6, "tripl": 4, "triton": [0, 1, 6, 9, 12], "tritonds": [0, 6, 10, 11], "true": [1, 2, 3, 4, 5], "truncat": 5, "try": [3, 5, 9], "tt": [6, 12], "tune": [7, 8], "tupl": [2, 4, 5], "two": [2, 5, 9, 10], "typ": [0, 1], "type": [0, 1, 3, 4, 10], "u": 5, "uaf": 4, "uncas": 5, "uncover": 4, "under": [3, 6], "underli": 0, "unicod": 5, "unicodeencodeerror": 5, "uniqu": 4, "unless": 5, "untouch": 5, "updat": 1, "upper": 5, "uppercas": 5, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "usabl": 5, "usag": [6, 7, 8, 9], "utf": 5, "util": [6, 9], "v0": [0, 1], "valid": [0, 1, 4, 5, 6], "valu": [5, 6], "valueerror": 5, "variabl": [7, 8], "variant": [0, 6, 12], "variou": [6, 10, 12], "veri": 0, "version": [2, 5, 6, 8], "via": [5, 6, 11, 12], "video": 10, "vuln": 4, "vulner": [5, 6], "w": [6, 9, 12], "wa": 6, "wai": 2, "wait": 12, "wall": 12, "want": 12, "warn": [1, 5], "watchdog": 6, "we": [0, 1, 12], "well": 5, "when": [0, 1, 2, 3, 5, 6, 9], "where": [1, 3, 5, 6, 7, 8, 9], "whether": [0, 2, 5, 6], "which": [0, 5, 6, 10], "while": [0, 5, 6, 9], "whitespac": 5, "whole": [0, 3, 10, 12], "whose": 5, "width": 5, "window": 5, "within": [0, 4, 5, 10, 12], "without": [6, 7, 8, 12], "word": 5, "work": [0, 1, 5, 8], "workflow": 10, "workspac": [6, 9, 12], "would": 6, "wrap": 0, "wrapper": 6, "write": [4, 12], "write_csv": 4, "written": 4, "x": [5, 7, 8, 9], "x86": 5, "x86_64": 5, "xmlcharrefreplac": 5, "xvf": 12, "y": [5, 8], "you": [0, 2, 12], "zero": 5, "zfill": 5, "zip": 3}, "titles": ["Adding a Fuzzer", "Agent", "Fuzzer Interface", "&lt;no title&gt;", "SAST", "Types", "Running PASTIS", "AFL++", "Honggfuzz", "TritonDSE", "Project Overview", "Installation", "FSM Demo"], "titleterms": {"action": 10, "ad": 0, "addon": 0, "afl": [7, 12], "aflpp": 7, "agent": 1, "analys": 6, "api": 10, "broker": [0, 1, 6, 12], "campaign": 12, "client": 1, "code": 10, "compon": 10, "configur": 9, "credit": 10, "demo": 12, "driver": 0, "engin": 10, "exampl": 0, "fsm": 12, "fuzz": 10, "fuzzer": [0, 2, 6], "get": 10, "honggfuzz": 8, "instal": [7, 8, 11], "interfac": 2, "linux": 11, "mode": [7, 8], "offlin": [7, 8, 9], "onlin": [7, 8, 9], "other": 11, "overview": 10, "pasti": [6, 7, 8, 10], "pastisd": 6, "platform": 11, "post": 12, "prepar": 12, "prerequisit": 0, "project": 10, "python": [0, 10], "result": [6, 9], "run": [6, 7, 8, 12], "sast": 4, "start": 10, "target": 12, "tritonds": [9, 12], "tutori": 10, "type": 5}})