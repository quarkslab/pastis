Search.setIndex({"docnames": ["adding-fuzzer", "api/agent", "api/descr", "api/package", "api/sast", "api/types", "campaign", "engines/aflpp", "engines/honggfuzz", "engines/tritondse", "index", "installation", "tutorials/demo-fsm"], "filenames": ["adding-fuzzer.rst", "api/agent.rst", "api/descr.rst", "api/package.rst", "api/sast.rst", "api/types.rst", "campaign.rst", "engines/aflpp.rst", "engines/honggfuzz.rst", "engines/tritondse.rst", "index.rst", "installation.rst", "tutorials/demo-fsm.rst"], "titles": ["Adding a Fuzzer", "Agent", "Fuzzer Interface", "&lt;no title&gt;", "SAST", "Types", "Running PASTIS", "AFL++", "Honggfuzz", "TritonDSE", "Project Overview", "Installation", "FSM Demo"], "terms": {"In": [0, 5, 6, 7, 8], "order": [0, 6, 12], "integr": 0, "pasti": [0, 1, 3, 9, 11, 12], "should": [0, 1, 2, 3, 5, 6, 9, 12], "support": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12], "receiv": [0, 1, 3, 6, 7, 8, 9, 10], "new": [0, 2, 5, 10], "input": [0, 1, 5, 6, 7, 8, 9], "while": [0, 5, 6, 9], "run": [0, 1, 2, 5, 9, 10], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12], "crash": [0, 1, 5, 6], "gener": 0, "prefer": 0, "soon": 0, "thei": [0, 5, 6, 10], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "produc": [0, 10], "some": [0, 5], "telemetri": [0, 1, 6], "could": [0, 1], "sent": [0, 1, 5, 6], "current": [0, 1, 4], "coverag": [0, 1, 2, 4, 5, 6, 9, 10], "execut": [0, 1, 2, 3, 5, 6, 7, 8, 9], "per": [0, 1, 6], "sec": 0, "etc": [0, 2, 3, 6], "If": [0, 2, 3, 5, 6, 9, 12], "doe": [0, 6, 7, 8], "featur": 0, "first": [0, 5], "need": [0, 6], "modifi": 0, "compliant": 0, "As": [0, 2, 9], "matter": 0, "honggfuzz": [0, 2, 6, 10, 11, 12], "ha": [0, 1, 4, 5, 7, 8, 11, 12], "been": [0, 1, 4, 5, 6, 11], "period": 0, "read": [0, 12], "specif": [0, 1, 2, 5, 6, 8, 12], "folder": [0, 6], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12], "onc": [0, 12], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "readi": [0, 12], "satisfi": 0, "constraint": 0, "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "wrap": 0, "act": [0, 10], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "interfac": [0, 1, 10], "between": [0, 5, 6, 10], "For": [0, 2, 6, 9], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "requir": [0, 3, 6, 7, 8, 9, 11], "object": [0, 1, 2, 3, 4, 5], "type": [0, 1, 3, 4, 10], "have": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12], "defin": [0, 2, 6], "libpasti": [0, 1, 2, 3, 4, 5, 10], "It": [0, 5, 6, 7, 8, 9, 10, 12], "notabl": 0, "clientag": [0, 1, 10], "agent": [0, 3, 5, 10], "class": [0, 1, 2, 3, 4, 5, 10], "one": [0, 1, 2, 5, 6, 7, 8, 9], "inherit": 0, "from": [0, 1, 2, 3, 4, 5, 6, 10, 12], "interact": [0, 1, 7, 8, 9], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "whole": [0, 3, 10, 12], "purpos": 0, "send": [0, 1, 3, 5, 10, 12], "data": [0, 1, 4, 5, 6, 12], "react": 0, "messag": [0, 1, 3, 5, 6, 7, 8, 9], "A": [0, 1, 2, 5], "client": [0, 2, 6, 10, 12], "follow": [0, 1, 5, 6, 9], "hello": [0, 1], "indic": [0, 1, 2, 3, 5, 6], "its": [0, 2, 3, 5, 9, 12], "own": [0, 9], "architectur": [0, 1, 3, 5, 6], "number": [0, 1, 4, 5, 9], "cpu": 0, "memori": [0, 6], "platform": [0, 1, 3, 5, 6, 10], "engin": [0, 1, 2, 5, 6, 8, 11, 12], "seed": [0, 1, 5, 6, 7, 8, 9, 10], "To": [0, 12], "alert": [0, 1, 4, 5, 6, 9, 10], "relat": [0, 1, 6], "inform": [0, 1, 6, 9], "cover": [0, 1, 4, 5, 6], "valid": [0, 1, 4, 5, 6], "log": [0, 1, 5, 6, 7, 8, 9], "seem": 0, "": [0, 1, 2, 5, 6, 7, 8, 9, 12], "relev": 0, "about": [0, 4, 9], "state": [0, 1, 4, 5, 12], "fuzz": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12], "exec": 0, "iter": [0, 4, 5, 9], "convers": 0, "materi": 0, "callback": [0, 1, 9], "call": [0, 1, 2, 5, 10], "implement": [0, 2, 5, 12], "start": [0, 1, 3, 5, 6, 9], "campain": [0, 6, 10], "contain": [0, 3, 5, 6, 9, 12], "program": [0, 1, 3, 6, 7, 8, 9], "runtim": [0, 6], "configur": [0, 1, 2, 5, 6, 10, 12], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "when": [0, 1, 2, 3, 5, 6, 9], "check": [0, 1, 3, 4, 6, 7, 8, 9], "campaign": [0, 6, 10], "alreadi": 0, "perform": [0, 4, 6, 9, 10], "initi": [0, 4, 6, 7, 8, 9, 10, 12], "underli": 0, "appropri": [0, 6, 11], "forward": [0, 2, 6], "also": [0, 3, 5, 6, 9, 10], "appli": [0, 9], "ani": [0, 5, 6, 9, 12], "pre": 0, "process": [0, 5], "consid": [0, 5, 6], "stop": [0, 1, 5, 6], "snippet": 0, "show": [0, 6, 7, 8, 9, 12], "how": [0, 5, 12], "instanci": 0, "veri": 0, "simpl": [0, 1, 7, 8, 12], "import": [0, 1], "list": [0, 1, 2, 3, 4, 5], "seedtyp": [0, 1, 5], "fuzzingengin": [0, 1], "execmod": [0, 1, 2, 5], "coveragemod": [0, 1, 2, 5], "seedinjectloc": [0, 1, 5], "checkmod": [0, 1, 5, 9], "loglevel": [0, 1, 5], "def": [0, 1, 5], "start_receiv": [0, 1], "fname": [0, 1], "str": [0, 1, 2, 3, 4, 5], "binari": [0, 1, 3, 6, 7, 8, 9, 10], "byte": [0, 1, 3, 4, 5], "exmod": [0, 1, 7, 8, 9], "chkmode": [0, 1, 6, 7, 8, 9], "covmod": [0, 1, 9], "seed_inj": [0, 1], "engine_arg": [0, 1], "argv": [0, 1, 5, 6, 7, 8, 9], "kl_report": [0, 1], "none": [0, 1, 2, 3, 4, 5], "pass": [0, 1], "commenc": [0, 1], "la": [0, 1], "campagn": [0, 1], "seed_receiv": [0, 1], "typ": [0, 1], "info": [0, 1, 5], "f": [0, 1, 5], "hex": [0, 1], "stop_receiv": [0, 1], "__name__": [0, 1], "__main__": [0, 1], "connect": [0, 1, 6, 10, 12], "default": [0, 1, 5, 9, 12], "localhost": [0, 1, 6, 7, 8, 9, 12], "5555": [0, 1, 6, 7, 8, 9, 12], "register_start_callback": [0, 1], "register_seed_callback": [0, 1], "register_stop_callback": [0, 1], "recept": [0, 1], "thread": [0, 1], "send_hello": [0, 1], "triton": [0, 1, 6, 9, 12], "v0": [0, 1], "8": [0, 1, 5, 9], "we": [0, 1, 12], "recommand": 0, "rather": [0, 12], "than": 0, "standalon": 0, "design": [0, 10], "independ": [0, 9], "which": [0, 5, 6, 10], "nonetheless": 0, "know": [0, 2], "variant": [0, 6, 12], "thu": [0, 1, 4, 5, 6, 7, 8, 9], "fuzzingenginedescriptor": [0, 2], "basic": [0, 2], "accept_fil": [0, 2], "method": [0, 1, 2, 5], "whether": [0, 2, 5, 6], "suitabl": [0, 5], "mecan": 0, "allow": [0, 6, 7, 8], "figur": 0, "summar": 0, "handshak": 0, "shown": 0, "do": [0, 5, 6], "advert": 0, "multipl": [0, 1, 5, 7, 8, 9], "fuzzingengineinfo": [0, 1, 5], "encapsul": 0, "hellomsg": [0, 1], "That": [0, 6, 9, 10], "name": [0, 1, 2, 3, 5, 6, 9], "modul": [0, 5, 6, 7, 8, 9], "side": [0, 1, 2], "load": [0, 2, 5, 6, 9, 12], "obtain": 0, "associ": 0, "describ": [0, 2, 6], "automat": [0, 5, 6, 7, 8, 9, 10], "find": [0, 3, 5, 7, 8], "subclass": [0, 1], "within": [0, 4, 5, 10, 12], "you": [0, 2, 12], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 10], "instal": [0, 10], "either": [0, 5, 7, 8], "separ": [0, 5], "directli": [0, 3], "main": [0, 3, 7, 8, 10], "code": [0, 4, 5, 12], "document": [0, 9], "api": 0, "There": [0, 7, 8], "noth": 0, "like": [0, 2], "see": [0, 11], "exist": [0, 6], "work": [0, 1, 5, 8], "basi": 0, "other": [0, 5, 6, 7, 8, 10], "tini": [0, 12], "test": [0, 3, 4, 5, 9, 10, 11], "test_client": 0, "py": 0, "tritonds": [0, 6, 10, 11], "pastisds": 0, "full": [1, 6], "exampl": [1, 5, 10], "sourc": [1, 2, 3, 4, 5], "base": [1, 5], "networkag": 1, "helper": 1, "bind": [1, 6], "port": [1, 6, 7, 8, 9, 12], "int": [1, 2, 4, 5], "ip": [1, 6, 9, 12], "given": [1, 3, 4, 5, 6], "listen": [1, 6], "incom": 1, "return": [1, 2, 3, 4, 5, 6], "remot": [1, 12], "bool": [1, 2, 3, 4, 5], "server": [1, 7, 8, 9], "address": [1, 2, 5, 9], "dn": 1, "alwai": 1, "true": [1, 2, 3, 4, 5], "critic": [1, 4, 5], "level": [1, 5], "debug": [1, 5, 9], "string": [1, 2, 3, 4, 5], "error": [1, 4, 5], "static": [1, 2, 3, 4, 5], "msg_to_typ": 1, "msg": 1, "inputseedmsg": 1, "startmsg": 1, "stopmsg": 1, "logmsg": 1, "telemetrymsg": 1, "stopcoveragecriteria": 1, "datamsg": 1, "messagetyp": 1, "get": [1, 4], "protobuf": [1, 5], "register_callback": 1, "callabl": 1, "regist": [1, 5, 9], "function": [1, 2, 3, 4, 9], "take": [1, 3], "register_data_callback": 1, "cb": 1, "At": [1, 6, 7, 8], "moment": [1, 6, 7, 8, 9], "necessarili": 1, "alertdata": [1, 5], "2": [1, 5], "content": [1, 3], "11": 1, "loop": [1, 6], "block": [1, 5, 6, 9], "manner": [1, 9], "msg_type": 1, "socket": 1, "onli": [1, 2, 3, 5, 6, 7, 8, 9], "send_alert_data": 1, "alert_data": 1, "sast": [1, 5, 6, 7, 8, 9, 10], "arch": [1, 3, 5], "e": [1, 4, 6, 12], "g": [1, 4, 12], "pastisd": 1, "meant": [1, 4, 6], "local": [1, 7, 8, 9], "so": [1, 2], "advertis": 1, "abl": [1, 12], "launch": [1, 6, 7, 8, 9, 12], "send_log": 1, "print": 1, "logfil": [1, 7, 8], "send_se": 1, "hang": [1, 5, 6], "send_stop_coverage_criteria": 1, "fulli": 1, "accord": 1, "criteria": [1, 6], "metric": [1, 2, 5], "send_telemetri": 1, "exec_per_sec": 1, "total_exec": 1, "cycl": 1, "timeout": [1, 6], "coverage_block": 1, "coverage_edg": 1, "coverage_path": 1, "last_cov_upd": 1, "These": 1, "plot": 1, "statist": 1, "fuzzer": [1, 5, 7, 8, 10, 11], "second": 1, "total": [1, 4], "count": [1, 5, 9], "edg": [1, 5, 6, 9], "path": [1, 2, 3, 4, 5, 6, 7, 8, 9], "last": 1, "updat": 1, "send_to": 1, "id": [1, 4, 5, 12], "warn": [1, 5], "brokerag": [1, 10], "register_hello_callback": 1, "register_log_callback": 1, "register_stop_coverage_callback": 1, "register_telemetry_callback": 1, "raw": 1, "send_start": 1, "packag": [1, 3, 10, 11], "fuzzmod": [1, 2, 5, 9], "ckmode": 1, "seed_loc": 1, "sast_report": 1, "filepath": [1, 2, 3], "binarypackag": [1, 3], "argumnet": 1, "command": [1, 3, 6, 7, 8, 9], "line": [1, 4, 5, 6, 7, 8, 9], "mode": [1, 2, 5, 6, 9, 10], "descriptor": [1, 5], "addit": [1, 3, 4, 9], "argument": [1, 5, 6, 7, 8], "locat": [1, 5, 6, 7, 8, 9], "where": [1, 3, 5, 6, 7, 8, 9], "stdin": [1, 5, 6, 7, 8, 9, 12], "report": [1, 4, 6, 7, 8, 9], "applic": [1, 3], "send_stop": 1, "enginedesc": 2, "engineconfigur": 2, "repres": [2, 3, 4, 5], "broker": [2, 3, 5, 7, 8, 9, 10], "them": [2, 7, 8, 9], "from_fil": [2, 4], "from_str": 2, "pars": [2, 4, 5], "get_coverage_mod": 2, "greybox": 2, "afl": [2, 6, 10, 11], "auto": [2, 3, 5, 9], "differ": [2, 3, 6, 9], "select": [2, 5], "fresh": 2, "set_target": 2, "target": [2, 3, 5, 6, 9, 10], "set": [2, 5, 10], "index": [2, 5], "wai": 2, "identifi": [2, 5], "to_str": 2, "serial": [2, 4, 5], "abstract": [2, 4], "version": [2, 5, 6, 8], "accept": 2, "short_nam": 2, "ae": 2, "1": [2, 5, 9], "0": [2, 5, 9], "short": 2, "binary_fil": 2, "tupl": [2, 4, 5], "detect": [2, 6, 12], "directori": [2, 3, 6, 7, 8, 9, 12], "develop": 2, "two": [2, 5, 9, 10], "option": [2, 5, 6, 7, 8, 9, 10], "attribut": [2, 4], "config_class": 2, "alia": 2, "supported_coverage_strategi": 2, "singl": [2, 5, 6], "main_binari": 3, "along": 3, "share": [3, 6, 10], "librari": [3, 7, 8, 10], "cmplog": 3, "dictionnari": [3, 4], "part": [3, 5, 7, 8], "extension_blacklist": 3, "gt": 3, "quokka": 3, "properti": 3, "exe_fil": 3, "try": [3, 5, 9], "creat": [3, 4, 6], "look": 3, "dictionari": [3, 4, 5], "same": [3, 5, 6, 9, 10], "auto_directori": 3, "ad": [3, 10], "callgraph": 3, "complog": 3, "executable_path": 3, "from_binari": 3, "extract_dir": 3, "convert": [3, 5], "blob": 3, "archiv": [3, 9], "extract": 3, "tmp": 3, "save": 3, "ensur": [3, 10], "inde": [3, 6], "term": 3, "permiss": 3, "rais": [3, 5], "filenotfounderror": 3, "mime": 3, "recogn": 3, "is_cmplog": 3, "is_dictionari": 3, "is_quokka": 3, "is_standalon": 3, "under": [3, 6], "databas": 3, "instrument": [3, 5, 6, 9, 12], "make_packag": 3, "pack": 3, "zip": 3, "exectu": 3, "sastalert": 4, "somewhat": 4, "tool": 4, "Its": [4, 10], "driven": [4, 6, 9, 10], "sever": 4, "review": 4, "from_json": [4, 5], "dict": 4, "json": [4, 5, 6, 12], "instanc": [4, 5, 6, 9], "impact": 4, "param": 4, "bof": 4, "uaf": 4, "convent": 4, "raw_lin": 4, "taxonomi": 4, "cwe": 4, "cve": 4, "misra": 4, "checker": 4, "to_dict": 4, "export": [4, 6, 7, 8], "written": 4, "uniqu": 4, "uncover": 4, "posit": [4, 5], "lead": [4, 5], "sastreport": [4, 6], "manag": 4, "taken": [4, 6], "add_alert": 4, "add": 4, "sole": [4, 6], "parser": 4, "all_alerts_valid": 4, "vuln": 4, "get_stat": 4, "stat": 4, "result": [4, 5, 10], "tripl": 4, "totoal": 4, "iter_alert": 4, "to_json": [4, 5], "write": [4, 12], "out_fil": 4, "output": [4, 12], "write_csv": 4, "csv": [4, 6], "reach": [5, 6, 7, 8, 9], "valu": [5, 6], "no_arg": 5, "qualnam": 5, "boundari": 5, "enum": 5, "represent": 5, "aarch64": 5, "3": [5, 10], "armv7": 5, "x86": 5, "x86_64": 5, "depdend": 5, "context": [5, 10], "check_al": [5, 6, 7, 8, 9], "normal": [5, 6, 7, 8, 9], "bug": [5, 10, 12], "vulner": [5, 6], "discoveri": [5, 6], "Then": [5, 10], "alert_onli": [5, 6, 7, 8, 9], "focu": 5, "alert_on": [5, 6, 9], "through": [5, 7, 8, 9], "capit": 5, "more": [5, 6, 9], "make": [5, 7, 8, 12], "charact": 5, "upper": 5, "case": [5, 6, 9, 10, 12], "rest": 5, "lower": 5, "casefold": 5, "caseless": 5, "comparison": 5, "center": 5, "width": 5, "fillchar": 5, "length": 5, "pad": 5, "done": [5, 12], "specifi": [5, 6, 7, 8], "fill": 5, "space": 5, "sub": 5, "end": 5, "non": 5, "overlap": 5, "occurr": 5, "substr": 5, "interpret": 5, "slice": 5, "notat": 5, "encod": 5, "utf": 5, "strict": 5, "codec": 5, "handl": [5, 9], "scheme": 5, "mean": 5, "unicodeencodeerror": 5, "possibl": [5, 6], "ignor": 5, "replac": 5, "xmlcharrefreplac": 5, "well": 5, "register_error": 5, "endswith": 5, "suffix": 5, "fals": 5, "otherwis": [5, 6, 7, 8], "With": 5, "begin": 5, "compar": 5, "expandtab": 5, "tabsiz": 5, "copi": [5, 6], "tab": 5, "expand": 5, "size": 5, "assum": 5, "lowest": 5, "found": [5, 7], "failur": 5, "format": 5, "arg": 5, "kwarg": 5, "substitut": 5, "brace": 5, "format_map": 5, "map": 5, "valueerror": 5, "isalnum": 5, "alpha": 5, "numer": 5, "least": 5, "isalpha": 5, "alphabet": 5, "isascii": 5, "ascii": 5, "point": 5, "rang": 5, "u": 5, "0000": 5, "007f": 5, "empti": 5, "too": 5, "isdecim": 5, "decim": 5, "isdigit": 5, "digit": 5, "isidentifi": 5, "python": [5, 6, 7, 9, 11], "keyword": 5, "iskeyword": 5, "reserv": 5, "islow": 5, "lowercas": 5, "isnumer": 5, "isprint": 5, "printabl": 5, "repr": 5, "isspac": 5, "whitespac": 5, "istitl": 5, "titl": 5, "mai": 5, "uncas": 5, "ones": [5, 10], "isupp": 5, "uppercas": 5, "join": 5, "concaten": 5, "whose": 5, "insert": 5, "each": [5, 6, 10, 12], "ab": 5, "pq": 5, "r": [5, 6, 7, 8, 9], "ljust": 5, "left": 5, "justifi": 5, "lstrip": 5, "char": 5, "remov": 5, "instead": 5, "maketran": 5, "translat": [5, 9], "tabl": 5, "usabl": 5, "must": [5, 6, 9], "unicod": 5, "ordin": 5, "integ": [5, 6, 9, 12], "kei": 5, "equal": 5, "x": [5, 7, 8, 9], "y": [5, 8], "third": 5, "partit": 5, "sep": 5, "three": [5, 6], "search": 5, "befor": [5, 6, 7], "itself": [5, 7, 8], "after": [5, 6], "origin": 5, "removeprefix": 5, "prefix": 5, "present": 5, "len": 5, "removesuffix": 5, "old": 5, "maximum": 5, "rfind": 5, "highest": 5, "rindex": 5, "rjust": 5, "right": [5, 6, 12], "rpartit": 5, "rsplit": 5, "maxsplit": 5, "split": 5, "includ": 5, "n": [5, 9], "t": [5, 6, 9], "discard": 5, "limit": [5, 6, 9], "front": 5, "rstrip": 5, "trail": 5, "note": [5, 12], "mainli": 5, "intention": 5, "delimit": 5, "natur": 5, "text": [5, 6, 7, 8, 9], "punctuat": 5, "regular": 5, "express": 5, "splitlin": 5, "keepend": 5, "break": 5, "unless": 5, "startswith": 5, "strip": 5, "swapcas": 5, "word": 5, "titlecas": 5, "remain": 5, "lookup": 5, "via": [5, 6, 11, 12], "__getitem__": 5, "oper": 5, "lookuperror": 5, "untouch": 5, "delet": 5, "zfill": 5, "zero": 5, "field": 5, "never": 5, "truncat": 5, "single_exec": [5, 7, 8, 9], "persist": [5, 7, 8, 9], "binary_onli": [5, 9], "pymodul": 5, "metadata": 5, "from_pb": 5, "pb": 5, "4": 5, "10": 5, "20": 5, "android": 5, "io": 5, "5": 5, "linux": [5, 6, 10], "maco": 5, "window": 5, "inject": [5, 6, 7, 8, 9], "plain": 5, "idl": 5, "har": 6, "compil": [6, 7, 8, 12], "usag": [6, 7, 8, 9], "pargv": [6, 7, 8, 9], "exit": [6, 7, 8], "w": [6, 9, 12], "workspac": [6, 9, 12], "store": 6, "b": [6, 12], "bin": [6, 12], "m": 6, "no_transmit": 6, "broke": 6, "c": [6, 9, 12], "injloc": 6, "tt": [6, 12], "config": [6, 9, 12], "hf": [6, 8, 12], "give": [6, 7, 8, 9], "corpu": [6, 9, 10, 12], "time": [6, 12], "p": [6, 7, 8, 9], "mem": 6, "threshold": 6, "ram": 6, "consumpt": 6, "help": [6, 7, 8, 9], "partial": 6, "util": [6, 9], "essenti": 6, "reus": 6, "mandatori": [6, 7, 8], "variou": [6, 10, 12], "similarli": 6, "depend": [6, 11, 12], "simplifi": 6, "capabl": 6, "elf": 6, "would": 6, "extra": 6, "effort": 6, "behavior": 6, "transmit": 6, "maxim": [6, 10], "peer": 6, "anoth": 6, "explor": [6, 7, 8, 9], "global": 6, "secur": 6, "enabl": [6, 9, 10], "direct": 6, "toward": 6, "addon": [6, 10, 12], "insid": 6, "wrapper": 6, "network": [6, 9, 10], "watchdog": 6, "percent": 6, "kill": 6, "without": [6, 7, 8, 12], "equilibr": 6, "balanc": 6, "theirs": 6, "aflpp": [6, 10, 12], "onlin": [6, 10, 12], "daemon": 6, "avail": 6, "announc": 6, "decid": 6, "lan": 6, "maintain": 6, "pleas": 6, "favor": 6, "explicit": 6, "aggreg": 6, "trigger": 6, "final": 6, "restart": 6, "interrupt": 6, "structur": 6, "alerts_data": 6, "wa": 6, "synthet": 6, "environ": [7, 8], "variabl": [7, 8], "qemu": 7, "git": 7, "clone": 7, "http": 7, "github": 7, "com": 7, "aflplusplu": 7, "cd": [7, 8, 12], "distrib": 7, "qemu_mod": 7, "build_qemu_support": 7, "sh": [7, 8], "echo": [7, 8, 12], "aflpp_path": 7, "pwd": [7, 8], "profil": [7, 8], "tricki": [7, 8], "discover": [7, 8], "intent": [7, 8], "further": [7, 8], "h": [7, 8, 9], "respect": [7, 8, 10], "host": [7, 8], "chk": [7, 8, 9], "seedinj": [7, 8, 9], "One": [7, 8, 12], "tune": [7, 8], "driver": [8, 10], "beforehand": 8, "patch": 8, "tailor": 8, "sudo": 8, "apt": 8, "binutil": 8, "dev": 8, "libunwind": 8, "make_hf": 8, "hfuzz_path": 8, "5a504b49": 8, "subsequ": 9, "machin": [9, 12], "fmod": 9, "cov": 9, "prefixed_edg": 9, "strategi": 9, "probe": 9, "probeinterfac": 9, "pp": 9, "predic": 9, "trace": 9, "detail": 9, "chang": 9, "extern": 9, "attach": 9, "complet": 9, "combin": [9, 10, 12], "project": 9, "counterpart": 9, "put": 9, "practic": 9, "intrins": 9, "mani": 9, "event": 9, "mechan": 9, "refer": 9, "organ": 9, "framework": [10, 11, 12], "aim": 10, "softwar": [10, 12], "techniqu": 10, "workflow": 10, "collabor": [10, 12], "ensembl": 10, "video": 10, "highlight": 10, "howev": 10, "standard": 10, "research": 10, "codebas": 10, "articul": 10, "around": 10, "togeth": 10, "form": 10, "infrastructur": 10, "pure": 10, "commun": 10, "mostli": 10, "expos": 10, "common": 10, "head": 10, "intermedi": 10, "charg": 10, "theoret": 10, "analyst": 10, "propag": 10, "back": 10, "absorb": 10, "analys": 10, "prerequisit": 10, "offlin": 10, "demo": 10, "fsm": 10, "prepar": 10, "post": 10, "sponsor": 10, "pip": 11, "pypi": 11, "approach": 12, "packet": 12, "struct": 12, "compos": 12, "16": 12, "bit": 12, "32": 12, "switch": 12, "our": 12, "tar": 12, "xvf": 12, "gz": 12, "makefil": 12, "straighforward": 12, "cc": 12, "clang": 12, "hfuzz": 12, "cflag": 12, "wall": 12, "fno": 12, "pie": 12, "src": 12, "o": 12, "now": 12, "By": 12, "contact": 12, "wait": 12, "want": 12, "pastisttbrok": 12, "conf": 12, "preload": 12, "termin": 12, "retriev": 12}, "objects": {"libpastis": [[1, 0, 1, "", "BrokerAgent"], [1, 0, 1, "", "ClientAgent"], [2, 2, 0, "-", "enginedesc"], [3, 2, 0, "-", "package"], [4, 2, 0, "-", "sast"], [5, 2, 0, "-", "types"]], "libpastis.BrokerAgent": [[1, 1, 1, "", "bind"], [1, 1, 1, "", "connect"], [1, 1, 1, "", "msg_to_type"], [1, 1, 1, "", "register_callback"], [1, 1, 1, "", "register_data_callback"], [1, 1, 1, "", "register_hello_callback"], [1, 1, 1, "", "register_log_callback"], [1, 1, 1, "", "register_seed_callback"], [1, 1, 1, "", "register_stop_coverage_callback"], [1, 1, 1, "", "register_telemetry_callback"], [1, 1, 1, "", "run"], [1, 1, 1, "", "send"], [1, 1, 1, "", "send_seed"], [1, 1, 1, "", "send_start"], [1, 1, 1, "", "send_stop"], [1, 1, 1, "", "send_to"], [1, 1, 1, "", "start"], [1, 1, 1, "", "stop"]], "libpastis.ClientAgent": [[1, 1, 1, "", "bind"], [1, 1, 1, "", "connect"], [1, 1, 1, "", "critical"], [1, 1, 1, "", "debug"], [1, 1, 1, "", "error"], [1, 1, 1, "", "info"], [1, 1, 1, "", "msg_to_type"], [1, 1, 1, "", "register_callback"], [1, 1, 1, "", "register_data_callback"], [1, 1, 1, "", "register_seed_callback"], [1, 1, 1, "", "register_start_callback"], [1, 1, 1, "", "register_stop_callback"], [1, 1, 1, "", "run"], [1, 1, 1, "", "send"], [1, 1, 1, "", "send_alert_data"], [1, 1, 1, "", "send_hello"], [1, 1, 1, "", "send_log"], [1, 1, 1, "", "send_seed"], [1, 1, 1, "", "send_stop_coverage_criteria"], [1, 1, 1, "", "send_telemetry"], [1, 1, 1, "", "send_to"], [1, 1, 1, "", "start"], [1, 1, 1, "", "stop"], [1, 1, 1, "", "warning"]], "libpastis.enginedesc": [[2, 0, 1, "", "EngineConfiguration"], [2, 0, 1, "", "FuzzingEngineDescriptor"]], "libpastis.enginedesc.EngineConfiguration": [[2, 1, 1, "", "from_file"], [2, 1, 1, "", "from_str"], [2, 1, 1, "", "get_coverage_mode"], [2, 1, 1, "", "new"], [2, 1, 1, "", "set_target"], [2, 1, 1, "", "to_str"]], "libpastis.enginedesc.FuzzingEngineDescriptor": [[2, 3, 1, "", "NAME"], [2, 3, 1, "", "SHORT_NAME"], [2, 3, 1, "", "VERSION"], [2, 1, 1, "", "accept_file"], [2, 3, 1, "", "config_class"], [2, 1, 1, "", "supported_coverage_strategies"]], "libpastis.package": [[3, 0, 1, "", "BinaryPackage"]], "libpastis.package.BinaryPackage": [[3, 3, 1, "", "EXTENSION_BLACKLIST"], [3, 4, 1, "", "arch"], [3, 1, 1, "", "auto"], [3, 1, 1, "", "auto_directory"], [3, 4, 1, "", "callgraph"], [3, 4, 1, "", "cmplog"], [3, 4, 1, "", "dictionary"], [3, 4, 1, "", "executable_path"], [3, 1, 1, "", "from_binary"], [3, 1, 1, "", "is_cmplog"], [3, 1, 1, "", "is_dictionary"], [3, 1, 1, "", "is_quokka"], [3, 1, 1, "", "is_standalone"], [3, 1, 1, "", "make_package"], [3, 4, 1, "", "name"], [3, 4, 1, "", "platform"], [3, 4, 1, "", "quokka"]], "libpastis.sast": [[4, 0, 1, "", "SASTAlert"], [4, 0, 1, "", "SASTReport"]], "libpastis.sast.SASTAlert": [[4, 3, 1, "", "file"], [4, 1, 1, "", "from_json"], [4, 3, 1, "", "function"], [4, 3, 1, "", "line"], [4, 3, 1, "", "params"], [4, 3, 1, "", "raw_line"], [4, 3, 1, "", "severity"], [4, 3, 1, "", "taxonomy"], [4, 1, 1, "", "to_dict"], [4, 3, 1, "", "type"], [4, 3, 1, "", "uncoverable"], [4, 3, 1, "", "validated"]], "libpastis.sast.SASTReport": [[4, 1, 1, "", "add_alert"], [4, 1, 1, "", "all_alerts_validated"], [4, 1, 1, "", "from_file"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "get_stats"], [4, 1, 1, "", "iter_alerts"], [4, 1, 1, "", "to_json"], [4, 1, 1, "", "write"], [4, 1, 1, "", "write_csv"]], "libpastis.types": [[5, 0, 1, "", "AlertData"], [5, 0, 1, "", "Arch"], [5, 0, 1, "", "CheckMode"], [5, 0, 1, "", "CoverageMode"], [5, 0, 1, "", "ExecMode"], [5, 0, 1, "", "FuzzMode"], [5, 0, 1, "", "FuzzingEngineInfo"], [5, 0, 1, "", "LogLevel"], [5, 0, 1, "", "Platform"], [5, 0, 1, "", "SeedInjectLoc"], [5, 0, 1, "", "SeedType"], [5, 0, 1, "", "State"]], "libpastis.types.AlertData": [[5, 3, 1, "", "address"], [5, 3, 1, "", "covered"], [5, 1, 1, "", "from_json"], [5, 3, 1, "", "seed"], [5, 1, 1, "", "to_json"], [5, 3, 1, "", "validated"]], "libpastis.types.Arch": [[5, 3, 1, "", "AARCH64"], [5, 3, 1, "", "ARMV7"], [5, 3, 1, "", "X86"], [5, 3, 1, "", "X86_64"]], "libpastis.types.CheckMode": [[5, 3, 1, "", "ALERT_ONE"], [5, 3, 1, "", "ALERT_ONLY"], [5, 3, 1, "", "CHECK_ALL"]], "libpastis.types.CoverageMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "BLOCK"], [5, 3, 1, "", "EDGE"], [5, 3, 1, "", "PATH"], [5, 3, 1, "", "STATE"], [5, 1, 1, "", "capitalize"], [5, 1, 1, "", "casefold"], [5, 1, 1, "", "center"], [5, 1, 1, "", "count"], [5, 1, 1, "", "encode"], [5, 1, 1, "", "endswith"], [5, 1, 1, "", "expandtabs"], [5, 1, 1, "", "find"], [5, 1, 1, "", "format"], [5, 1, 1, "", "format_map"], [5, 1, 1, "", "index"], [5, 1, 1, "", "isalnum"], [5, 1, 1, "", "isalpha"], [5, 1, 1, "", "isascii"], [5, 1, 1, "", "isdecimal"], [5, 1, 1, "", "isdigit"], [5, 1, 1, "", "isidentifier"], [5, 1, 1, "", "islower"], [5, 1, 1, "", "isnumeric"], [5, 1, 1, "", "isprintable"], [5, 1, 1, "", "isspace"], [5, 1, 1, "", "istitle"], [5, 1, 1, "", "isupper"], [5, 1, 1, "", "join"], [5, 1, 1, "", "ljust"], [5, 1, 1, "", "lower"], [5, 1, 1, "", "lstrip"], [5, 1, 1, "", "maketrans"], [5, 1, 1, "", "partition"], [5, 1, 1, "", "removeprefix"], [5, 1, 1, "", "removesuffix"], [5, 1, 1, "", "replace"], [5, 1, 1, "", "rfind"], [5, 1, 1, "", "rindex"], [5, 1, 1, "", "rjust"], [5, 1, 1, "", "rpartition"], [5, 1, 1, "", "rsplit"], [5, 1, 1, "", "rstrip"], [5, 1, 1, "", "split"], [5, 1, 1, "", "splitlines"], [5, 1, 1, "", "startswith"], [5, 1, 1, "", "strip"], [5, 1, 1, "", "swapcase"], [5, 1, 1, "", "title"], [5, 1, 1, "", "translate"], [5, 1, 1, "", "upper"], [5, 1, 1, "", "zfill"]], "libpastis.types.ExecMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "PERSISTENT"], [5, 3, 1, "", "SINGLE_EXEC"]], "libpastis.types.FuzzMode": [[5, 3, 1, "", "AUTO"], [5, 3, 1, "", "BINARY_ONLY"], [5, 3, 1, "", "INSTRUMENTED"]], "libpastis.types.FuzzingEngineInfo": [[5, 1, 1, "", "from_pb"], [5, 3, 1, "", "pymodule"], [5, 3, 1, "", "version"]], "libpastis.types.LogLevel": [[5, 3, 1, "", "CRITICAL"], [5, 3, 1, "", "DEBUG"], [5, 3, 1, "", "ERROR"], [5, 3, 1, "", "INFO"], [5, 3, 1, "", "WARNING"]], "libpastis.types.Platform": [[5, 3, 1, "", "ANDROID"], [5, 3, 1, "", "ANY"], [5, 3, 1, "", "IOS"], [5, 3, 1, "", "LINUX"], [5, 3, 1, "", "MACOS"], [5, 3, 1, "", "WINDOWS"]], "libpastis.types.SeedInjectLoc": [[5, 3, 1, "", "ARGV"], [5, 3, 1, "", "STDIN"]], "libpastis.types.SeedType": [[5, 3, 1, "", "CRASH"], [5, 3, 1, "", "HANG"], [5, 3, 1, "", "INPUT"]], "libpastis.types.State": [[5, 3, 1, "", "IDLE"], [5, 3, 1, "", "RUNNING"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"ad": 0, "fuzzer": [0, 2, 6], "prerequisit": 0, "python": [0, 10], "driver": 0, "broker": [0, 1, 6, 12], "addon": 0, "exampl": 0, "agent": 1, "client": 1, "interfac": 2, "sast": 4, "type": 5, "run": [6, 7, 8, 12], "pasti": [6, 7, 8, 10], "pastisd": 6, "analys": 6, "result": [6, 9], "afl": [7, 12], "instal": [7, 8, 11], "aflpp": 7, "onlin": [7, 8, 9], "mode": [7, 8], "offlin": [7, 8, 9], "honggfuzz": 8, "tritonds": [9, 12], "configur": 9, "project": 10, "overview": 10, "code": 10, "compon": 10, "action": 10, "get": 10, "start": 10, "fuzz": 10, "engin": 10, "tutori": 10, "api": 10, "credit": 10, "linux": 11, "other": 11, "platform": 11, "fsm": 12, "demo": 12, "prepar": 12, "target": 12, "post": 12, "campaign": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Adding a Fuzzer": [[0, "adding-a-fuzzer"]], "Prerequisites": [[0, "prerequisites"]], "Python Driver": [[0, "python-driver"]], "Broker Addon": [[0, "broker-addon"]], "Examples": [[0, "examples"]], "Agent": [[1, "agent"]], "Client": [[1, "client"]], "Broker": [[1, "broker"], [6, "broker"]], "Fuzzer Interface": [[2, "module-libpastis.enginedesc"]], "SAST": [[4, "module-libpastis.sast"]], "Types": [[5, "module-libpastis.types"]], "Running PASTIS": [[6, "running-pastis"]], "Fuzzers": [[6, "fuzzers"]], "pastisd": [[6, "pastisd"]], "Analysing Results": [[6, "analysing-results"]], "AFL++": [[7, "afl"]], "Installation": [[7, "installation"], [8, "installation"], [11, "installation"]], "Running pastis-aflpp": [[7, "running-pastis-aflpp"]], "Online mode": [[7, "online-mode"], [8, "online-mode"]], "Offline mode": [[7, "offline-mode"], [8, "offline-mode"]], "Honggfuzz": [[8, "honggfuzz"]], "Running pastis-honggfuzz": [[8, "running-pastis-honggfuzz"]], "TritonDSE": [[9, "tritondse"]], "Online": [[9, "online"]], "Offline": [[9, "offline"]], "Configuration & Results": [[9, "configuration-results"]], "Project Overview": [[10, "project-overview"]], "Code Components": [[10, "code-components"]], "PASTIS in action": [[10, "pastis-in-action"]], "Getting Started": [[10, null]], "Fuzzing Engines": [[10, null]], "Tutorials": [[10, null]], "Python API": [[10, null]], "Credits": [[10, "credits"]], "Linux": [[11, "linux"]], "Other Platforms": [[11, "other-platforms"]], "FSM Demo": [[12, "fsm-demo"]], "Preparing the target": [[12, "preparing-the-target"]], "Running the Broker": [[12, "running-the-broker"]], "Running AFL++": [[12, "running-afl"]], "Running TritonDSE": [[12, "running-tritondse"]], "Post campaign": [[12, "post-campaign"]]}, "indexentries": {"brokeragent (class in libpastis)": [[1, "libpastis.BrokerAgent"]], "clientagent (class in libpastis)": [[1, "libpastis.ClientAgent"]], "bind() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.bind"]], "bind() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.bind"]], "connect() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.connect"]], "connect() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.connect"]], "critical() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.critical"]], "debug() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.debug"]], "error() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.error"]], "info() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.info"]], "msg_to_type() (libpastis.brokeragent static method)": [[1, "libpastis.BrokerAgent.msg_to_type"]], "msg_to_type() (libpastis.clientagent static method)": [[1, "libpastis.ClientAgent.msg_to_type"]], "register_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_callback"]], "register_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_callback"]], "register_data_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_data_callback"]], "register_data_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_data_callback"]], "register_hello_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_hello_callback"]], "register_log_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_log_callback"]], "register_seed_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_seed_callback"]], "register_seed_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_seed_callback"]], "register_start_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_start_callback"]], "register_stop_callback() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.register_stop_callback"]], "register_stop_coverage_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_stop_coverage_callback"]], "register_telemetry_callback() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.register_telemetry_callback"]], "run() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.run"]], "run() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.run"]], "send() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send"]], "send() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send"]], "send_alert_data() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_alert_data"]], "send_hello() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_hello"]], "send_log() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_log"]], "send_seed() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_seed"]], "send_seed() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_seed"]], "send_start() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_start"]], "send_stop() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_stop"]], "send_stop_coverage_criteria() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_stop_coverage_criteria"]], "send_telemetry() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_telemetry"]], "send_to() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.send_to"]], "send_to() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.send_to"]], "start() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.start"]], "start() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.start"]], "stop() (libpastis.brokeragent method)": [[1, "libpastis.BrokerAgent.stop"]], "stop() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.stop"]], "warning() (libpastis.clientagent method)": [[1, "libpastis.ClientAgent.warning"]], "engineconfiguration (class in libpastis.enginedesc)": [[2, "libpastis.enginedesc.EngineConfiguration"]], "fuzzingenginedescriptor (class in libpastis.enginedesc)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor"]], "name (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.NAME"]], "short_name (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.SHORT_NAME"]], "version (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.VERSION"]], "accept_file() (libpastis.enginedesc.fuzzingenginedescriptor static method)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.accept_file"]], "config_class (libpastis.enginedesc.fuzzingenginedescriptor attribute)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.config_class"]], "from_file() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.from_file"]], "from_str() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.from_str"]], "get_coverage_mode() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.get_coverage_mode"]], "libpastis.enginedesc": [[2, "module-libpastis.enginedesc"]], "module": [[2, "module-libpastis.enginedesc"], [3, "module-libpastis.package"], [4, "module-libpastis.sast"], [5, "module-libpastis.types"]], "new() (libpastis.enginedesc.engineconfiguration static method)": [[2, "libpastis.enginedesc.EngineConfiguration.new"]], "set_target() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.set_target"]], "supported_coverage_strategies() (libpastis.enginedesc.fuzzingenginedescriptor static method)": [[2, "libpastis.enginedesc.FuzzingEngineDescriptor.supported_coverage_strategies"]], "to_str() (libpastis.enginedesc.engineconfiguration method)": [[2, "libpastis.enginedesc.EngineConfiguration.to_str"]], "binarypackage (class in libpastis.package)": [[3, "libpastis.package.BinaryPackage"]], "extension_blacklist (libpastis.package.binarypackage attribute)": [[3, "libpastis.package.BinaryPackage.EXTENSION_BLACKLIST"]], "arch (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.arch"]], "auto() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.auto"]], "auto_directory() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.auto_directory"]], "callgraph (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.callgraph"]], "cmplog (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.cmplog"]], "dictionary (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.dictionary"]], "executable_path (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.executable_path"]], "from_binary() (libpastis.package.binarypackage static method)": [[3, "libpastis.package.BinaryPackage.from_binary"]], "is_cmplog() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_cmplog"]], "is_dictionary() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_dictionary"]], "is_quokka() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_quokka"]], "is_standalone() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.is_standalone"]], "libpastis.package": [[3, "module-libpastis.package"]], "make_package() (libpastis.package.binarypackage method)": [[3, "libpastis.package.BinaryPackage.make_package"]], "name (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.name"]], "platform (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.platform"]], "quokka (libpastis.package.binarypackage property)": [[3, "libpastis.package.BinaryPackage.quokka"]], "sastalert (class in libpastis.sast)": [[4, "libpastis.sast.SASTAlert"]], "sastreport (class in libpastis.sast)": [[4, "libpastis.sast.SASTReport"]], "add_alert() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.add_alert"]], "all_alerts_validated() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.all_alerts_validated"]], "file (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.file"]], "from_file() (libpastis.sast.sastreport static method)": [[4, "libpastis.sast.SASTReport.from_file"]], "from_json() (libpastis.sast.sastalert static method)": [[4, "libpastis.sast.SASTAlert.from_json"]], "from_json() (libpastis.sast.sastreport static method)": [[4, "libpastis.sast.SASTReport.from_json"]], "function (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.function"]], "get_stats() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.get_stats"]], "iter_alerts() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.iter_alerts"]], "libpastis.sast": [[4, "module-libpastis.sast"]], "line (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.line"]], "params (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.params"]], "raw_line (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.raw_line"]], "severity (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.severity"]], "taxonomy (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.taxonomy"]], "to_dict() (libpastis.sast.sastalert method)": [[4, "libpastis.sast.SASTAlert.to_dict"]], "to_json() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.to_json"]], "type (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.type"]], "uncoverable (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.uncoverable"]], "validated (libpastis.sast.sastalert attribute)": [[4, "libpastis.sast.SASTAlert.validated"]], "write() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.write"]], "write_csv() (libpastis.sast.sastreport method)": [[4, "libpastis.sast.SASTReport.write_csv"]], "aarch64 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.AARCH64"]], "alert_one (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.ALERT_ONE"]], "alert_only (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.ALERT_ONLY"]], "android (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.ANDROID"]], "any (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.ANY"]], "argv (libpastis.types.seedinjectloc attribute)": [[5, "libpastis.types.SeedInjectLoc.ARGV"]], "armv7 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.ARMV7"]], "auto (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.AUTO"]], "auto (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.AUTO"]], "auto (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.AUTO"]], "alertdata (class in libpastis.types)": [[5, "libpastis.types.AlertData"]], "arch (class in libpastis.types)": [[5, "libpastis.types.Arch"]], "binary_only (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.BINARY_ONLY"]], "block (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.BLOCK"]], "check_all (libpastis.types.checkmode attribute)": [[5, "libpastis.types.CheckMode.CHECK_ALL"]], "crash (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.CRASH"]], "critical (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.CRITICAL"]], "checkmode (class in libpastis.types)": [[5, "libpastis.types.CheckMode"]], "coveragemode (class in libpastis.types)": [[5, "libpastis.types.CoverageMode"]], "debug (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.DEBUG"]], "edge (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.EDGE"]], "error (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.ERROR"]], "execmode (class in libpastis.types)": [[5, "libpastis.types.ExecMode"]], "fuzzmode (class in libpastis.types)": [[5, "libpastis.types.FuzzMode"]], "fuzzingengineinfo (class in libpastis.types)": [[5, "libpastis.types.FuzzingEngineInfo"]], "hang (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.HANG"]], "idle (libpastis.types.state attribute)": [[5, "libpastis.types.State.IDLE"]], "info (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.INFO"]], "input (libpastis.types.seedtype attribute)": [[5, "libpastis.types.SeedType.INPUT"]], "instrumented (libpastis.types.fuzzmode attribute)": [[5, "libpastis.types.FuzzMode.INSTRUMENTED"]], "ios (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.IOS"]], "linux (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.LINUX"]], "loglevel (class in libpastis.types)": [[5, "libpastis.types.LogLevel"]], "macos (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.MACOS"]], "path (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.PATH"]], "persistent (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.PERSISTENT"]], "platform (class in libpastis.types)": [[5, "libpastis.types.Platform"]], "running (libpastis.types.state attribute)": [[5, "libpastis.types.State.RUNNING"]], "single_exec (libpastis.types.execmode attribute)": [[5, "libpastis.types.ExecMode.SINGLE_EXEC"]], "state (libpastis.types.coveragemode attribute)": [[5, "libpastis.types.CoverageMode.STATE"]], "stdin (libpastis.types.seedinjectloc attribute)": [[5, "libpastis.types.SeedInjectLoc.STDIN"]], "seedinjectloc (class in libpastis.types)": [[5, "libpastis.types.SeedInjectLoc"]], "seedtype (class in libpastis.types)": [[5, "libpastis.types.SeedType"]], "state (class in libpastis.types)": [[5, "libpastis.types.State"]], "warning (libpastis.types.loglevel attribute)": [[5, "libpastis.types.LogLevel.WARNING"]], "windows (libpastis.types.platform attribute)": [[5, "libpastis.types.Platform.WINDOWS"]], "x86 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.X86"]], "x86_64 (libpastis.types.arch attribute)": [[5, "libpastis.types.Arch.X86_64"]], "address (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.address"]], "capitalize() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.capitalize"]], "casefold() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.casefold"]], "center() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.center"]], "count() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.count"]], "covered (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.covered"]], "encode() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.encode"]], "endswith() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.endswith"]], "expandtabs() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.expandtabs"]], "find() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.find"]], "format() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.format"]], "format_map() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.format_map"]], "from_json() (libpastis.types.alertdata static method)": [[5, "libpastis.types.AlertData.from_json"]], "from_pb() (libpastis.types.fuzzingengineinfo static method)": [[5, "libpastis.types.FuzzingEngineInfo.from_pb"]], "index() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.index"]], "isalnum() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isalnum"]], "isalpha() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isalpha"]], "isascii() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isascii"]], "isdecimal() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isdecimal"]], "isdigit() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isdigit"]], "isidentifier() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isidentifier"]], "islower() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.islower"]], "isnumeric() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isnumeric"]], "isprintable() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isprintable"]], "isspace() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isspace"]], "istitle() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.istitle"]], "isupper() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.isupper"]], "join() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.join"]], "libpastis.types": [[5, "module-libpastis.types"]], "ljust() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.ljust"]], "lower() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.lower"]], "lstrip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.lstrip"]], "maketrans() (libpastis.types.coveragemode static method)": [[5, "libpastis.types.CoverageMode.maketrans"]], "partition() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.partition"]], "pymodule (libpastis.types.fuzzingengineinfo attribute)": [[5, "libpastis.types.FuzzingEngineInfo.pymodule"]], "removeprefix() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.removeprefix"]], "removesuffix() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.removesuffix"]], "replace() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.replace"]], "rfind() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rfind"]], "rindex() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rindex"]], "rjust() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rjust"]], "rpartition() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rpartition"]], "rsplit() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rsplit"]], "rstrip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.rstrip"]], "seed (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.seed"]], "split() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.split"]], "splitlines() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.splitlines"]], "startswith() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.startswith"]], "strip() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.strip"]], "swapcase() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.swapcase"]], "title() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.title"]], "to_json() (libpastis.types.alertdata method)": [[5, "libpastis.types.AlertData.to_json"]], "translate() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.translate"]], "upper() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.upper"]], "validated (libpastis.types.alertdata attribute)": [[5, "libpastis.types.AlertData.validated"]], "version (libpastis.types.fuzzingengineinfo attribute)": [[5, "libpastis.types.FuzzingEngineInfo.version"]], "zfill() (libpastis.types.coveragemode method)": [[5, "libpastis.types.CoverageMode.zfill"]]}})