#!/usr/bin/env python3

# built-in imports
import click
import sys
import logging
# Local imports
from pastisbroker import PastisBroker, BrokingMode
from libpastis.types import CheckMode
import coloredlogs

#logging.basicConfig(level=logging.DEBUG)
logging.root.name = f"\033[7m\033[39m[ BROKER ]\033[0m"
coloredlogs.install(level=logging.DEBUG,
                    fmt="%(asctime)s %(name)s %(levelname)s %(message)s",
                    level_styles={'debug': {'color': 'blue'}, # 10
                                  'info': {}, # 20
                                  'warning': {'color': 'yellow'},  # 30
                                  'success': {'bold': True, 'color': 'green'}, # 35
                                  'error': {'color': 'red'},
                                  'critical': {'bold': True, 'color': 'red'}})


def main():
    # Instanciate the broker
    workspace = sys.argv.pop(0)
    kl_report = sys.argv.pop(0)
    binaries_dir = sys.argv.pop(0)
    bmode = BrokingMode.FULL
    ckmode = CheckMode.ALERT_ONLY
    pargv = sys.argv
    broker = PastisBroker(workspace, kl_report, binaries_dir, bmode, ckmode, pargv)

    # Bind it and start listening (clients can connect)
    broker.bind()
    #broker.start()
    broker.run()
    # Send the binary to all already connected clients and start broking
    # broker.run()
    return broker


if __name__ == "__main__":
    sys.argv.pop(0)
    if len(sys.argv) < 3:
        print("Usage: ./pastis-broker workspace klocwork_report binaries_dir **argv")
        sys.exit(1)

    broker = main()
