# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Quarkslab
# This file is distributed under the same license as the HF-Wrapper package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: HF-Wrapper \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-10 12:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../api_usage.rst:4
msgid "API Usage"
msgstr ""

#: ../../api_usage.rst:7
msgid "Basic usage"
msgstr ""

#: ../../api_usage.rst:9
msgid ""
"A mandatory field of the :py:class:`Honggfuzz` is a libpastis agent. When"
" running honggfuzz locally one can provide a :py:class:`FileAgent` that "
"will act as a stub by simply logging messages that shall have been sent "
"in online mode. The script shown below shows a basic exemple on how to "
"kickstart honggfuzz with an initial seed."
msgstr ""

#: ../../api_usage.rst:58
msgid "Replaying inputs"
msgstr ""

#: ../../api_usage.rst:60
msgid ""
"The Python module, provide a very basic replay engine allowing to re-run "
"the target with a given input, to check its return code or its output. "
"Using the ``subprocess`` module it is being used to analyse inputs *(for "
"checking coverage and validating klocwork alerts)*. At the moment the "
":py:class:`Replay` search for specific pattern ``rb\".*REACHED ID "
"(\\d+)\"`` to identify PASTIS intrinsics covered. The following snippet "
"shows how to re-run the target on a given input and checking various "
"properties."
msgstr ""

#: ../../api_usage.rst:90
msgid ""
"The complete API of the :py:class:`Replay` is described in "
":ref:`label_replay`."
msgstr ""

